Terminals unused in grammar

   TOKEN
   CONTINUING_NEWLINE
   PERCENT
   COMMAND_PIPE
   ERROR
   UNTERMINATED_LEXING_BLOCK


Grammar

    0 $accept: root $end

    1 root: statements

    2 statements: statement
    3           | statements terminator statement

    4 terminator: TERMINATING_NEWLINE
    5           | SEMICOLON

    6 optional_whitespace: /* empty */
    7                    | WHITESPACE
    8                    | TERMINATING_NEWLINE

    9 statement: pipeline AMPERSAND
   10          | pipeline
   11          | assignment
   12          | COLON expression
   13          | KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_ELSE BEGIN_BRACE statements END_BRACE
   14          | KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   15          | KEYWORD_WHILE optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   16          | KEYWORD_DO optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_WHILE optional_whitespace fragment
   17          | KEYWORD_FOREACH optional_whitespace fragment optional_whitespace KEYWORD_AS optional_whitespace mapping BEGIN_BRACE statements END_BRACE
   18          | KEYWORD_RETURN WHITESPACE expression
   19          | /* empty */

   20 mapping: DOLLAR VARIABLE optional_whitespace MAP optional_whitespace DOLLAR VARIABLE optional_whitespace
   21        | DOLLAR VARIABLE optional_whitespace

   22 fragments_or_function_declaration: fragments
   23                                  | function_declaration

   24 assignment: DOLLAR VARIABLE EQUALS fragments_or_function_declaration
   25           | COLON DOLLAR VARIABLE EQUALS fragments_or_function_declaration
   26           | COLON expression ACCESS expression EQUALS fragments_or_function_declaration
   27           | COLON expression ACCESS BEGIN_SQUARE END_SQUARE EQUALS fragments_or_function_declaration

   28 pipeline: instruction
   29         | pipeline PIPE instruction

   30 instruction: command
   31            | function_declaration

   32 key_values: key_name
   33           | key_name EQUALS fragment
   34           | key_values COMMA key_name EQUALS fragment
   35           | key_values COMMA key_name

   36 key_name: fragment_or_variable
   37         | QUESTION_MARK

   38 command: arguments

   39 arguments: fragments
   40          | arguments WHITESPACE fragments

   41 fragments: fragment
   42          | fragments fragment
   43          | fragments keyword_as_string

   44 fragment: fragment_or_variable
   45         | number
   46         | MINUS
   47         | PHP
   48         | SINGLE_QUOTED
   49         | DOUBLE_QUOTED
   50         | DOLLAR VARIABLE
   51         | DOLLAR NUMBER
   52         | DOLLAR QUESTION_MARK
   53         | DOLLAR BEGIN_PAREN pipeline END_PAREN
   54         | DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   55         | BEGIN_PAREN expression END_PAREN
   56         | array_decl

   57 array_decl: AT BEGIN_PAREN optional_whitespace END_PAREN
   58           | AT BEGIN_PAREN array_def END_PAREN
   59           | AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN

   60 array_def: array_element
   61          | array_def COMMA array_element

   62 array_element: optional_whitespace fragment optional_whitespace MAP optional_whitespace fragment optional_whitespace
   63              | optional_whitespace fragment optional_whitespace

   64 number: NUMBER

   65 keyword_as_string: KEYWORD_IF
   66                  | KEYWORD_ELSE
   67                  | KEYWORD_WHILE
   68                  | KEYWORD_FOR
   69                  | KEYWORD_FOREACH
   70                  | KEYWORD_DO
   71                  | KEYWORD_BREAK
   72                  | KEYWORD_CONTINUE
   73                  | KEYWORD_AS

   74 fragment_or_variable: FRAGMENT
   75                     | VARIABLE

   76 expression: fragment
   77           | expression ACCESS expression
   78           | expression BEGIN_PAREN END_PAREN
   79           | expression BEGIN_PAREN comma_arguments END_PAREN
   80           | expression DIVIDE expression
   81           | expression MULTIPLY expression
   82           | expression ADD expression
   83           | expression WHITESPACE MINUS expression
   84           | function_declaration

   85 function_declaration: BEGIN_PAREN END_PAREN MAP BEGIN_BRACE statements END_BRACE

   86 comma_arguments: fragments
   87                | comma_arguments COMMA fragments


Terminals, with rules where they appear

$end (0) 0
error (256)
TOKEN (258)
WHITESPACE (259) 7 18 40 83
CONTINUING_NEWLINE (260)
TERMINATING_NEWLINE (261) 4 8
PIPE (262) 29
PERCENT (263)
DOLLAR (264) 20 21 24 25 50 51 52 53 54
BEGIN_PAREN (265) 53 54 55 57 58 59 78 79 85
END_PAREN (266) 53 54 55 57 58 59 78 79 85
EQUALS (267) 24 25 26 27 33 34
BEGIN_SQUARE (268) 27 54
END_SQUARE (269) 27 54
BEGIN_BRACE (270) 13 14 15 16 17 85
END_BRACE (271) 13 14 15 16 17 85
COMMA (272) 34 35 59 61 87
COMMAND_PIPE (273)
SEMICOLON (274) 5
AMPERSAND (275) 9
ERROR (276)
ACCESS (277) 26 27 77
MAP (278) 20 62 85
MINUS (279) 46 83
ADD (280) 82
MULTIPLY (281) 81
DIVIDE (282) 80
AT (283) 57 58 59
COLON (284) 12 25 26 27
UNTERMINATED_LEXING_BLOCK (285)
KEYWORD_WHILE (286) 15 16 67
KEYWORD_DO (287) 16 70
KEYWORD_FOR (288) 68
KEYWORD_FOREACH (289) 17 69
KEYWORD_BREAK (290) 71
KEYWORD_CONTINUE (291) 72
KEYWORD_IF (292) 13 14 65
KEYWORD_ELSE (293) 13 66
KEYWORD_AS (294) 17 73
KEYWORD_RETURN (295) 18
NUMBER (296) 51 64
FRAGMENT (297) 74
SINGLE_QUOTED (298) 48
DOUBLE_QUOTED (299) 49
VARIABLE (300) 20 21 24 25 50 75
QUESTION_MARK (301) 37 52
PHP (302) 47


Nonterminals, with rules where they appear

$accept (48)
    on left: 0
root (49)
    on left: 1, on right: 0
statements (50)
    on left: 2 3, on right: 1 3 13 14 15 16 17 85
terminator (51)
    on left: 4 5, on right: 3
optional_whitespace (52)
    on left: 6 7 8, on right: 13 14 15 16 17 20 21 57 59 62 63
statement (53)
    on left: 9 10 11 12 13 14 15 16 17 18 19, on right: 2 3
mapping (54)
    on left: 20 21, on right: 17
fragments_or_function_declaration (55)
    on left: 22 23, on right: 24 25 26 27
assignment (56)
    on left: 24 25 26 27, on right: 11
pipeline (57)
    on left: 28 29, on right: 9 10 29 53 54
instruction (58)
    on left: 30 31, on right: 28 29
key_values (59)
    on left: 32 33 34 35, on right: 34 35 54
key_name (60)
    on left: 36 37, on right: 32 33 34 35
command (61)
    on left: 38, on right: 30
arguments (62)
    on left: 39 40, on right: 38 40
fragments (63)
    on left: 41 42 43, on right: 22 39 40 42 43 86 87
fragment (64)
    on left: 44 45 46 47 48 49 50 51 52 53 54 55 56, on right: 13 14
    15 16 17 33 34 41 42 62 63 76
array_decl (65)
    on left: 57 58 59, on right: 56
array_def (66)
    on left: 60 61, on right: 58 59 61
array_element (67)
    on left: 62 63, on right: 60 61
number (68)
    on left: 64, on right: 45
keyword_as_string (69)
    on left: 65 66 67 68 69 70 71 72 73, on right: 43
fragment_or_variable (70)
    on left: 74 75, on right: 36 44
expression (71)
    on left: 76 77 78 79 80 81 82 83 84, on right: 12 18 26 27 55 77
    78 79 80 81 82 83
function_declaration (72)
    on left: 85, on right: 23 31 84
comma_arguments (73)
    on left: 86 87, on right: 79 87


State 0

    0 $accept: . root $end
    1 root: . statements
    2 statements: . statement
    3           | . statements terminator statement
    9 statement: . pipeline AMPERSAND
   10          | . pipeline
   11          | . assignment
   12          | . COLON expression
   13          | . KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_ELSE BEGIN_BRACE statements END_BRACE
   14          | . KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   15          | . KEYWORD_WHILE optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   16          | . KEYWORD_DO optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_WHILE optional_whitespace fragment
   17          | . KEYWORD_FOREACH optional_whitespace fragment optional_whitespace KEYWORD_AS optional_whitespace mapping BEGIN_BRACE statements END_BRACE
   18          | . KEYWORD_RETURN WHITESPACE expression
   19          | .  [$end, TERMINATING_NEWLINE, SEMICOLON]
   24 assignment: . DOLLAR VARIABLE EQUALS fragments_or_function_declaration
   25           | . COLON DOLLAR VARIABLE EQUALS fragments_or_function_declaration
   26           | . COLON expression ACCESS expression EQUALS fragments_or_function_declaration
   27           | . COLON expression ACCESS BEGIN_SQUARE END_SQUARE EQUALS fragments_or_function_declaration
   28 pipeline: . instruction
   29         | . pipeline PIPE instruction
   30 instruction: . command
   31            | . function_declaration
   38 command: . arguments
   39 arguments: . fragments
   40          | . arguments WHITESPACE fragments
   41 fragments: . fragment
   42          | . fragments fragment
   43          | . fragments keyword_as_string
   44 fragment: . fragment_or_variable
   45         | . number
   46         | . MINUS
   47         | . PHP
   48         | . SINGLE_QUOTED
   49         | . DOUBLE_QUOTED
   50         | . DOLLAR VARIABLE
   51         | . DOLLAR NUMBER
   52         | . DOLLAR QUESTION_MARK
   53         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   54         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   55         | . BEGIN_PAREN expression END_PAREN
   56         | . array_decl
   57 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   58           | . AT BEGIN_PAREN array_def END_PAREN
   59           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   64 number: . NUMBER
   74 fragment_or_variable: . FRAGMENT
   75                     | . VARIABLE
   85 function_declaration: . BEGIN_PAREN END_PAREN MAP BEGIN_BRACE statements END_BRACE

    DOLLAR           shift, and go to state 1
    BEGIN_PAREN      shift, and go to state 2
    MINUS            shift, and go to state 3
    AT               shift, and go to state 4
    COLON            shift, and go to state 5
    KEYWORD_WHILE    shift, and go to state 6
    KEYWORD_DO       shift, and go to state 7
    KEYWORD_FOREACH  shift, and go to state 8
    KEYWORD_IF       shift, and go to state 9
    KEYWORD_RETURN   shift, and go to state 10
    NUMBER           shift, and go to state 11
    FRAGMENT         shift, and go to state 12
    SINGLE_QUOTED    shift, and go to state 13
    DOUBLE_QUOTED    shift, and go to state 14
    VARIABLE         shift, and go to state 15
    PHP              shift, and go to state 16

    $default  reduce using rule 19 (statement)

    root                  go to state 17
    statements            go to state 18
    statement             go to state 19
    assignment            go to state 20
    pipeline              go to state 21
    instruction           go to state 22
    command               go to state 23
    arguments             go to state 24
    fragments             go to state 25
    fragment              go to state 26
    array_decl            go to state 27
    number                go to state 28
    fragment_or_variable  go to state 29
    function_declaration  go to state 30


State 1

   24 assignment: DOLLAR . VARIABLE EQUALS fragments_or_function_declaration
   50 fragment: DOLLAR . VARIABLE
   51         | DOLLAR . NUMBER
   52         | DOLLAR . QUESTION_MARK
   53         | DOLLAR . BEGIN_PAREN pipeline END_PAREN
   54         | DOLLAR . BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN

    BEGIN_PAREN    shift, and go to state 31
    BEGIN_SQUARE   shift, and go to state 32
    NUMBER         shift, and go to state 33
    VARIABLE       shift, and go to state 34
    QUESTION_MARK  shift, and go to state 35


State 2

   44 fragment: . fragment_or_variable
   45         | . number
   46         | . MINUS
   47         | . PHP
   48         | . SINGLE_QUOTED
   49         | . DOUBLE_QUOTED
   50         | . DOLLAR VARIABLE
   51         | . DOLLAR NUMBER
   52         | . DOLLAR QUESTION_MARK
   53         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   54         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   55         | . BEGIN_PAREN expression END_PAREN
   55         | BEGIN_PAREN . expression END_PAREN
   56         | . array_decl
   57 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   58           | . AT BEGIN_PAREN array_def END_PAREN
   59           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   64 number: . NUMBER
   74 fragment_or_variable: . FRAGMENT
   75                     | . VARIABLE
   76 expression: . fragment
   77           | . expression ACCESS expression
   78           | . expression BEGIN_PAREN END_PAREN
   79           | . expression BEGIN_PAREN comma_arguments END_PAREN
   80           | . expression DIVIDE expression
   81           | . expression MULTIPLY expression
   82           | . expression ADD expression
   83           | . expression WHITESPACE MINUS expression
   84           | . function_declaration
   85 function_declaration: . BEGIN_PAREN END_PAREN MAP BEGIN_BRACE statements END_BRACE
   85                     | BEGIN_PAREN . END_PAREN MAP BEGIN_BRACE statements END_BRACE

    DOLLAR         shift, and go to state 36
    BEGIN_PAREN    shift, and go to state 2
    END_PAREN      shift, and go to state 37
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 11
    FRAGMENT       shift, and go to state 12
    SINGLE_QUOTED  shift, and go to state 13
    DOUBLE_QUOTED  shift, and go to state 14
    VARIABLE       shift, and go to state 15
    PHP            shift, and go to state 16

    fragment              go to state 38
    array_decl            go to state 27
    number                go to state 28
    fragment_or_variable  go to state 29
    expression            go to state 39
    function_declaration  go to state 40


State 3

   46 fragment: MINUS .

    $default  reduce using rule 46 (fragment)


State 4

   57 array_decl: AT . BEGIN_PAREN optional_whitespace END_PAREN
   58           | AT . BEGIN_PAREN array_def END_PAREN
   59           | AT . BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN

    BEGIN_PAREN  shift, and go to state 41


State 5

   12 statement: COLON . expression
   25 assignment: COLON . DOLLAR VARIABLE EQUALS fragments_or_function_declaration
   26           | COLON . expression ACCESS expression EQUALS fragments_or_function_declaration
   27           | COLON . expression ACCESS BEGIN_SQUARE END_SQUARE EQUALS fragments_or_function_declaration
   44 fragment: . fragment_or_variable
   45         | . number
   46         | . MINUS
   47         | . PHP
   48         | . SINGLE_QUOTED
   49         | . DOUBLE_QUOTED
   50         | . DOLLAR VARIABLE
   51         | . DOLLAR NUMBER
   52         | . DOLLAR QUESTION_MARK
   53         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   54         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   55         | . BEGIN_PAREN expression END_PAREN
   56         | . array_decl
   57 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   58           | . AT BEGIN_PAREN array_def END_PAREN
   59           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   64 number: . NUMBER
   74 fragment_or_variable: . FRAGMENT
   75                     | . VARIABLE
   76 expression: . fragment
   77           | . expression ACCESS expression
   78           | . expression BEGIN_PAREN END_PAREN
   79           | . expression BEGIN_PAREN comma_arguments END_PAREN
   80           | . expression DIVIDE expression
   81           | . expression MULTIPLY expression
   82           | . expression ADD expression
   83           | . expression WHITESPACE MINUS expression
   84           | . function_declaration
   85 function_declaration: . BEGIN_PAREN END_PAREN MAP BEGIN_BRACE statements END_BRACE

    DOLLAR         shift, and go to state 42
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 11
    FRAGMENT       shift, and go to state 12
    SINGLE_QUOTED  shift, and go to state 13
    DOUBLE_QUOTED  shift, and go to state 14
    VARIABLE       shift, and go to state 15
    PHP            shift, and go to state 16

    fragment              go to state 38
    array_decl            go to state 27
    number                go to state 28
    fragment_or_variable  go to state 29
    expression            go to state 43
    function_declaration  go to state 40


State 6

    6 optional_whitespace: .  [DOLLAR, BEGIN_PAREN, MINUS, AT, NUMBER, FRAGMENT, SINGLE_QUOTED, DOUBLE_QUOTED, VARIABLE, PHP]
    7                    | . WHITESPACE
    8                    | . TERMINATING_NEWLINE
   15 statement: KEYWORD_WHILE . optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE

    WHITESPACE           shift, and go to state 44
    TERMINATING_NEWLINE  shift, and go to state 45

    $default  reduce using rule 6 (optional_whitespace)

    optional_whitespace  go to state 46


State 7

    6 optional_whitespace: .  [BEGIN_BRACE]
    7                    | . WHITESPACE
    8                    | . TERMINATING_NEWLINE
   16 statement: KEYWORD_DO . optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_WHILE optional_whitespace fragment

    WHITESPACE           shift, and go to state 44
    TERMINATING_NEWLINE  shift, and go to state 45

    $default  reduce using rule 6 (optional_whitespace)

    optional_whitespace  go to state 47


State 8

    6 optional_whitespace: .  [DOLLAR, BEGIN_PAREN, MINUS, AT, NUMBER, FRAGMENT, SINGLE_QUOTED, DOUBLE_QUOTED, VARIABLE, PHP]
    7                    | . WHITESPACE
    8                    | . TERMINATING_NEWLINE
   17 statement: KEYWORD_FOREACH . optional_whitespace fragment optional_whitespace KEYWORD_AS optional_whitespace mapping BEGIN_BRACE statements END_BRACE

    WHITESPACE           shift, and go to state 44
    TERMINATING_NEWLINE  shift, and go to state 45

    $default  reduce using rule 6 (optional_whitespace)

    optional_whitespace  go to state 48


State 9

    6 optional_whitespace: .  [DOLLAR, BEGIN_PAREN, MINUS, AT, NUMBER, FRAGMENT, SINGLE_QUOTED, DOUBLE_QUOTED, VARIABLE, PHP]
    7                    | . WHITESPACE
    8                    | . TERMINATING_NEWLINE
   13 statement: KEYWORD_IF . optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_ELSE BEGIN_BRACE statements END_BRACE
   14          | KEYWORD_IF . optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE

    WHITESPACE           shift, and go to state 44
    TERMINATING_NEWLINE  shift, and go to state 45

    $default  reduce using rule 6 (optional_whitespace)

    optional_whitespace  go to state 49


State 10

   18 statement: KEYWORD_RETURN . WHITESPACE expression

    WHITESPACE  shift, and go to state 50


State 11

   64 number: NUMBER .

    $default  reduce using rule 64 (number)


State 12

   74 fragment_or_variable: FRAGMENT .

    $default  reduce using rule 74 (fragment_or_variable)


State 13

   48 fragment: SINGLE_QUOTED .

    $default  reduce using rule 48 (fragment)


State 14

   49 fragment: DOUBLE_QUOTED .

    $default  reduce using rule 49 (fragment)


State 15

   75 fragment_or_variable: VARIABLE .

    $default  reduce using rule 75 (fragment_or_variable)


State 16

   47 fragment: PHP .

    $default  reduce using rule 47 (fragment)


State 17

    0 $accept: root . $end

    $end  shift, and go to state 51


State 18

    1 root: statements .  [$end]
    3 statements: statements . terminator statement
    4 terminator: . TERMINATING_NEWLINE
    5           | . SEMICOLON

    TERMINATING_NEWLINE  shift, and go to state 52
    SEMICOLON            shift, and go to state 53

    $default  reduce using rule 1 (root)

    terminator  go to state 54


State 19

    2 statements: statement .

    $default  reduce using rule 2 (statements)


State 20

   11 statement: assignment .

    $default  reduce using rule 11 (statement)


State 21

    9 statement: pipeline . AMPERSAND
   10          | pipeline .  [$end, TERMINATING_NEWLINE, END_BRACE, SEMICOLON]
   29 pipeline: pipeline . PIPE instruction

    PIPE       shift, and go to state 55
    AMPERSAND  shift, and go to state 56

    $default  reduce using rule 10 (statement)


State 22

   28 pipeline: instruction .

    $default  reduce using rule 28 (pipeline)


State 23

   30 instruction: command .

    $default  reduce using rule 30 (instruction)


State 24

   38 command: arguments .  [$end, TERMINATING_NEWLINE, PIPE, END_PAREN, END_BRACE, SEMICOLON, AMPERSAND]
   40 arguments: arguments . WHITESPACE fragments

    WHITESPACE  shift, and go to state 57

    $default  reduce using rule 38 (command)


State 25

   39 arguments: fragments .  [$end, WHITESPACE, TERMINATING_NEWLINE, PIPE, END_PAREN, END_BRACE, SEMICOLON, AMPERSAND]
   42 fragments: fragments . fragment
   43          | fragments . keyword_as_string
   44 fragment: . fragment_or_variable
   45         | . number
   46         | . MINUS
   47         | . PHP
   48         | . SINGLE_QUOTED
   49         | . DOUBLE_QUOTED
   50         | . DOLLAR VARIABLE
   51         | . DOLLAR NUMBER
   52         | . DOLLAR QUESTION_MARK
   53         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   54         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   55         | . BEGIN_PAREN expression END_PAREN
   56         | . array_decl
   57 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   58           | . AT BEGIN_PAREN array_def END_PAREN
   59           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   64 number: . NUMBER
   65 keyword_as_string: . KEYWORD_IF
   66                  | . KEYWORD_ELSE
   67                  | . KEYWORD_WHILE
   68                  | . KEYWORD_FOR
   69                  | . KEYWORD_FOREACH
   70                  | . KEYWORD_DO
   71                  | . KEYWORD_BREAK
   72                  | . KEYWORD_CONTINUE
   73                  | . KEYWORD_AS
   74 fragment_or_variable: . FRAGMENT
   75                     | . VARIABLE

    DOLLAR            shift, and go to state 36
    BEGIN_PAREN       shift, and go to state 58
    MINUS             shift, and go to state 3
    AT                shift, and go to state 4
    KEYWORD_WHILE     shift, and go to state 59
    KEYWORD_DO        shift, and go to state 60
    KEYWORD_FOR       shift, and go to state 61
    KEYWORD_FOREACH   shift, and go to state 62
    KEYWORD_BREAK     shift, and go to state 63
    KEYWORD_CONTINUE  shift, and go to state 64
    KEYWORD_IF        shift, and go to state 65
    KEYWORD_ELSE      shift, and go to state 66
    KEYWORD_AS        shift, and go to state 67
    NUMBER            shift, and go to state 11
    FRAGMENT          shift, and go to state 12
    SINGLE_QUOTED     shift, and go to state 13
    DOUBLE_QUOTED     shift, and go to state 14
    VARIABLE          shift, and go to state 15
    PHP               shift, and go to state 16

    $default  reduce using rule 39 (arguments)

    fragment              go to state 68
    array_decl            go to state 27
    number                go to state 28
    keyword_as_string     go to state 69
    fragment_or_variable  go to state 29


State 26

   41 fragments: fragment .

    $default  reduce using rule 41 (fragments)


State 27

   56 fragment: array_decl .

    $default  reduce using rule 56 (fragment)


State 28

   45 fragment: number .

    $default  reduce using rule 45 (fragment)


State 29

   44 fragment: fragment_or_variable .

    $default  reduce using rule 44 (fragment)


State 30

   31 instruction: function_declaration .

    $default  reduce using rule 31 (instruction)


State 31

   28 pipeline: . instruction
   29         | . pipeline PIPE instruction
   30 instruction: . command
   31            | . function_declaration
   38 command: . arguments
   39 arguments: . fragments
   40          | . arguments WHITESPACE fragments
   41 fragments: . fragment
   42          | . fragments fragment
   43          | . fragments keyword_as_string
   44 fragment: . fragment_or_variable
   45         | . number
   46         | . MINUS
   47         | . PHP
   48         | . SINGLE_QUOTED
   49         | . DOUBLE_QUOTED
   50         | . DOLLAR VARIABLE
   51         | . DOLLAR NUMBER
   52         | . DOLLAR QUESTION_MARK
   53         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   53         | DOLLAR BEGIN_PAREN . pipeline END_PAREN
   54         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   55         | . BEGIN_PAREN expression END_PAREN
   56         | . array_decl
   57 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   58           | . AT BEGIN_PAREN array_def END_PAREN
   59           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   64 number: . NUMBER
   74 fragment_or_variable: . FRAGMENT
   75                     | . VARIABLE
   85 function_declaration: . BEGIN_PAREN END_PAREN MAP BEGIN_BRACE statements END_BRACE

    DOLLAR         shift, and go to state 36
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 11
    FRAGMENT       shift, and go to state 12
    SINGLE_QUOTED  shift, and go to state 13
    DOUBLE_QUOTED  shift, and go to state 14
    VARIABLE       shift, and go to state 15
    PHP            shift, and go to state 16

    pipeline              go to state 70
    instruction           go to state 22
    command               go to state 23
    arguments             go to state 24
    fragments             go to state 25
    fragment              go to state 26
    array_decl            go to state 27
    number                go to state 28
    fragment_or_variable  go to state 29
    function_declaration  go to state 30


State 32

   32 key_values: . key_name
   33           | . key_name EQUALS fragment
   34           | . key_values COMMA key_name EQUALS fragment
   35           | . key_values COMMA key_name
   36 key_name: . fragment_or_variable
   37         | . QUESTION_MARK
   54 fragment: DOLLAR BEGIN_SQUARE . key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   74 fragment_or_variable: . FRAGMENT
   75                     | . VARIABLE

    FRAGMENT       shift, and go to state 12
    VARIABLE       shift, and go to state 15
    QUESTION_MARK  shift, and go to state 71

    key_values            go to state 72
    key_name              go to state 73
    fragment_or_variable  go to state 74


State 33

   51 fragment: DOLLAR NUMBER .

    $default  reduce using rule 51 (fragment)


State 34

   24 assignment: DOLLAR VARIABLE . EQUALS fragments_or_function_declaration
   50 fragment: DOLLAR VARIABLE .  [$end, WHITESPACE, TERMINATING_NEWLINE, PIPE, DOLLAR, BEGIN_PAREN, END_BRACE, SEMICOLON, AMPERSAND, MINUS, AT, KEYWORD_WHILE, KEYWORD_DO, KEYWORD_FOR, KEYWORD_FOREACH, KEYWORD_BREAK, KEYWORD_CONTINUE, KEYWORD_IF, KEYWORD_ELSE, KEYWORD_AS, NUMBER, FRAGMENT, SINGLE_QUOTED, DOUBLE_QUOTED, VARIABLE, PHP]

    EQUALS  shift, and go to state 75

    $default  reduce using rule 50 (fragment)


State 35

   52 fragment: DOLLAR QUESTION_MARK .

    $default  reduce using rule 52 (fragment)


State 36

   50 fragment: DOLLAR . VARIABLE
   51         | DOLLAR . NUMBER
   52         | DOLLAR . QUESTION_MARK
   53         | DOLLAR . BEGIN_PAREN pipeline END_PAREN
   54         | DOLLAR . BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN

    BEGIN_PAREN    shift, and go to state 31
    BEGIN_SQUARE   shift, and go to state 32
    NUMBER         shift, and go to state 33
    VARIABLE       shift, and go to state 76
    QUESTION_MARK  shift, and go to state 35


State 37

   85 function_declaration: BEGIN_PAREN END_PAREN . MAP BEGIN_BRACE statements END_BRACE

    MAP  shift, and go to state 77


State 38

   76 expression: fragment .

    $default  reduce using rule 76 (expression)


State 39

   55 fragment: BEGIN_PAREN expression . END_PAREN
   77 expression: expression . ACCESS expression
   78           | expression . BEGIN_PAREN END_PAREN
   79           | expression . BEGIN_PAREN comma_arguments END_PAREN
   80           | expression . DIVIDE expression
   81           | expression . MULTIPLY expression
   82           | expression . ADD expression
   83           | expression . WHITESPACE MINUS expression

    WHITESPACE   shift, and go to state 78
    BEGIN_PAREN  shift, and go to state 79
    END_PAREN    shift, and go to state 80
    ACCESS       shift, and go to state 81
    ADD          shift, and go to state 82
    MULTIPLY     shift, and go to state 83
    DIVIDE       shift, and go to state 84


State 40

   84 expression: function_declaration .

    $default  reduce using rule 84 (expression)


State 41

    6 optional_whitespace: .  [DOLLAR, BEGIN_PAREN, END_PAREN, MINUS, AT, NUMBER, FRAGMENT, SINGLE_QUOTED, DOUBLE_QUOTED, VARIABLE, PHP]
    7                    | . WHITESPACE
    8                    | . TERMINATING_NEWLINE
   57 array_decl: AT BEGIN_PAREN . optional_whitespace END_PAREN
   58           | AT BEGIN_PAREN . array_def END_PAREN
   59           | AT BEGIN_PAREN . array_def COMMA optional_whitespace END_PAREN
   60 array_def: . array_element
   61          | . array_def COMMA array_element
   62 array_element: . optional_whitespace fragment optional_whitespace MAP optional_whitespace fragment optional_whitespace
   63              | . optional_whitespace fragment optional_whitespace

    WHITESPACE           shift, and go to state 44
    TERMINATING_NEWLINE  shift, and go to state 45

    $default  reduce using rule 6 (optional_whitespace)

    optional_whitespace  go to state 85
    array_def            go to state 86
    array_element        go to state 87


State 42

   25 assignment: COLON DOLLAR . VARIABLE EQUALS fragments_or_function_declaration
   50 fragment: DOLLAR . VARIABLE
   51         | DOLLAR . NUMBER
   52         | DOLLAR . QUESTION_MARK
   53         | DOLLAR . BEGIN_PAREN pipeline END_PAREN
   54         | DOLLAR . BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN

    BEGIN_PAREN    shift, and go to state 31
    BEGIN_SQUARE   shift, and go to state 32
    NUMBER         shift, and go to state 33
    VARIABLE       shift, and go to state 88
    QUESTION_MARK  shift, and go to state 35


State 43

   12 statement: COLON expression .  [$end, TERMINATING_NEWLINE, END_BRACE, SEMICOLON]
   26 assignment: COLON expression . ACCESS expression EQUALS fragments_or_function_declaration
   27           | COLON expression . ACCESS BEGIN_SQUARE END_SQUARE EQUALS fragments_or_function_declaration
   77 expression: expression . ACCESS expression
   78           | expression . BEGIN_PAREN END_PAREN
   79           | expression . BEGIN_PAREN comma_arguments END_PAREN
   80           | expression . DIVIDE expression
   81           | expression . MULTIPLY expression
   82           | expression . ADD expression
   83           | expression . WHITESPACE MINUS expression

    WHITESPACE   shift, and go to state 78
    BEGIN_PAREN  shift, and go to state 79
    ACCESS       shift, and go to state 89
    ADD          shift, and go to state 82
    MULTIPLY     shift, and go to state 83
    DIVIDE       shift, and go to state 84

    $default  reduce using rule 12 (statement)


State 44

    7 optional_whitespace: WHITESPACE .

    $default  reduce using rule 7 (optional_whitespace)


State 45

    8 optional_whitespace: TERMINATING_NEWLINE .

    $default  reduce using rule 8 (optional_whitespace)


State 46

   15 statement: KEYWORD_WHILE optional_whitespace . fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   44 fragment: . fragment_or_variable
   45         | . number
   46         | . MINUS
   47         | . PHP
   48         | . SINGLE_QUOTED
   49         | . DOUBLE_QUOTED
   50         | . DOLLAR VARIABLE
   51         | . DOLLAR NUMBER
   52         | . DOLLAR QUESTION_MARK
   53         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   54         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   55         | . BEGIN_PAREN expression END_PAREN
   56         | . array_decl
   57 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   58           | . AT BEGIN_PAREN array_def END_PAREN
   59           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   64 number: . NUMBER
   74 fragment_or_variable: . FRAGMENT
   75                     | . VARIABLE

    DOLLAR         shift, and go to state 36
    BEGIN_PAREN    shift, and go to state 58
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 11
    FRAGMENT       shift, and go to state 12
    SINGLE_QUOTED  shift, and go to state 13
    DOUBLE_QUOTED  shift, and go to state 14
    VARIABLE       shift, and go to state 15
    PHP            shift, and go to state 16

    fragment              go to state 90
    array_decl            go to state 27
    number                go to state 28
    fragment_or_variable  go to state 29


State 47

   16 statement: KEYWORD_DO optional_whitespace . BEGIN_BRACE statements END_BRACE KEYWORD_WHILE optional_whitespace fragment

    BEGIN_BRACE  shift, and go to state 91


State 48

   17 statement: KEYWORD_FOREACH optional_whitespace . fragment optional_whitespace KEYWORD_AS optional_whitespace mapping BEGIN_BRACE statements END_BRACE
   44 fragment: . fragment_or_variable
   45         | . number
   46         | . MINUS
   47         | . PHP
   48         | . SINGLE_QUOTED
   49         | . DOUBLE_QUOTED
   50         | . DOLLAR VARIABLE
   51         | . DOLLAR NUMBER
   52         | . DOLLAR QUESTION_MARK
   53         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   54         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   55         | . BEGIN_PAREN expression END_PAREN
   56         | . array_decl
   57 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   58           | . AT BEGIN_PAREN array_def END_PAREN
   59           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   64 number: . NUMBER
   74 fragment_or_variable: . FRAGMENT
   75                     | . VARIABLE

    DOLLAR         shift, and go to state 36
    BEGIN_PAREN    shift, and go to state 58
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 11
    FRAGMENT       shift, and go to state 12
    SINGLE_QUOTED  shift, and go to state 13
    DOUBLE_QUOTED  shift, and go to state 14
    VARIABLE       shift, and go to state 15
    PHP            shift, and go to state 16

    fragment              go to state 92
    array_decl            go to state 27
    number                go to state 28
    fragment_or_variable  go to state 29


State 49

   13 statement: KEYWORD_IF optional_whitespace . fragment optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_ELSE BEGIN_BRACE statements END_BRACE
   14          | KEYWORD_IF optional_whitespace . fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   44 fragment: . fragment_or_variable
   45         | . number
   46         | . MINUS
   47         | . PHP
   48         | . SINGLE_QUOTED
   49         | . DOUBLE_QUOTED
   50         | . DOLLAR VARIABLE
   51         | . DOLLAR NUMBER
   52         | . DOLLAR QUESTION_MARK
   53         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   54         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   55         | . BEGIN_PAREN expression END_PAREN
   56         | . array_decl
   57 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   58           | . AT BEGIN_PAREN array_def END_PAREN
   59           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   64 number: . NUMBER
   74 fragment_or_variable: . FRAGMENT
   75                     | . VARIABLE

    DOLLAR         shift, and go to state 36
    BEGIN_PAREN    shift, and go to state 58
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 11
    FRAGMENT       shift, and go to state 12
    SINGLE_QUOTED  shift, and go to state 13
    DOUBLE_QUOTED  shift, and go to state 14
    VARIABLE       shift, and go to state 15
    PHP            shift, and go to state 16

    fragment              go to state 93
    array_decl            go to state 27
    number                go to state 28
    fragment_or_variable  go to state 29


State 50

   18 statement: KEYWORD_RETURN WHITESPACE . expression
   44 fragment: . fragment_or_variable
   45         | . number
   46         | . MINUS
   47         | . PHP
   48         | . SINGLE_QUOTED
   49         | . DOUBLE_QUOTED
   50         | . DOLLAR VARIABLE
   51         | . DOLLAR NUMBER
   52         | . DOLLAR QUESTION_MARK
   53         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   54         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   55         | . BEGIN_PAREN expression END_PAREN
   56         | . array_decl
   57 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   58           | . AT BEGIN_PAREN array_def END_PAREN
   59           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   64 number: . NUMBER
   74 fragment_or_variable: . FRAGMENT
   75                     | . VARIABLE
   76 expression: . fragment
   77           | . expression ACCESS expression
   78           | . expression BEGIN_PAREN END_PAREN
   79           | . expression BEGIN_PAREN comma_arguments END_PAREN
   80           | . expression DIVIDE expression
   81           | . expression MULTIPLY expression
   82           | . expression ADD expression
   83           | . expression WHITESPACE MINUS expression
   84           | . function_declaration
   85 function_declaration: . BEGIN_PAREN END_PAREN MAP BEGIN_BRACE statements END_BRACE

    DOLLAR         shift, and go to state 36
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 11
    FRAGMENT       shift, and go to state 12
    SINGLE_QUOTED  shift, and go to state 13
    DOUBLE_QUOTED  shift, and go to state 14
    VARIABLE       shift, and go to state 15
    PHP            shift, and go to state 16

    fragment              go to state 38
    array_decl            go to state 27
    number                go to state 28
    fragment_or_variable  go to state 29
    expression            go to state 94
    function_declaration  go to state 40


State 51

    0 $accept: root $end .

    $default  accept


State 52

    4 terminator: TERMINATING_NEWLINE .

    $default  reduce using rule 4 (terminator)


State 53

    5 terminator: SEMICOLON .

    $default  reduce using rule 5 (terminator)


State 54

    3 statements: statements terminator . statement
    9 statement: . pipeline AMPERSAND
   10          | . pipeline
   11          | . assignment
   12          | . COLON expression
   13          | . KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_ELSE BEGIN_BRACE statements END_BRACE
   14          | . KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   15          | . KEYWORD_WHILE optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   16          | . KEYWORD_DO optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_WHILE optional_whitespace fragment
   17          | . KEYWORD_FOREACH optional_whitespace fragment optional_whitespace KEYWORD_AS optional_whitespace mapping BEGIN_BRACE statements END_BRACE
   18          | . KEYWORD_RETURN WHITESPACE expression
   19          | .  [$end, TERMINATING_NEWLINE, END_BRACE, SEMICOLON]
   24 assignment: . DOLLAR VARIABLE EQUALS fragments_or_function_declaration
   25           | . COLON DOLLAR VARIABLE EQUALS fragments_or_function_declaration
   26           | . COLON expression ACCESS expression EQUALS fragments_or_function_declaration
   27           | . COLON expression ACCESS BEGIN_SQUARE END_SQUARE EQUALS fragments_or_function_declaration
   28 pipeline: . instruction
   29         | . pipeline PIPE instruction
   30 instruction: . command
   31            | . function_declaration
   38 command: . arguments
   39 arguments: . fragments
   40          | . arguments WHITESPACE fragments
   41 fragments: . fragment
   42          | . fragments fragment
   43          | . fragments keyword_as_string
   44 fragment: . fragment_or_variable
   45         | . number
   46         | . MINUS
   47         | . PHP
   48         | . SINGLE_QUOTED
   49         | . DOUBLE_QUOTED
   50         | . DOLLAR VARIABLE
   51         | . DOLLAR NUMBER
   52         | . DOLLAR QUESTION_MARK
   53         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   54         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   55         | . BEGIN_PAREN expression END_PAREN
   56         | . array_decl
   57 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   58           | . AT BEGIN_PAREN array_def END_PAREN
   59           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   64 number: . NUMBER
   74 fragment_or_variable: . FRAGMENT
   75                     | . VARIABLE
   85 function_declaration: . BEGIN_PAREN END_PAREN MAP BEGIN_BRACE statements END_BRACE

    DOLLAR           shift, and go to state 1
    BEGIN_PAREN      shift, and go to state 2
    MINUS            shift, and go to state 3
    AT               shift, and go to state 4
    COLON            shift, and go to state 5
    KEYWORD_WHILE    shift, and go to state 6
    KEYWORD_DO       shift, and go to state 7
    KEYWORD_FOREACH  shift, and go to state 8
    KEYWORD_IF       shift, and go to state 9
    KEYWORD_RETURN   shift, and go to state 10
    NUMBER           shift, and go to state 11
    FRAGMENT         shift, and go to state 12
    SINGLE_QUOTED    shift, and go to state 13
    DOUBLE_QUOTED    shift, and go to state 14
    VARIABLE         shift, and go to state 15
    PHP              shift, and go to state 16

    $default  reduce using rule 19 (statement)

    statement             go to state 95
    assignment            go to state 20
    pipeline              go to state 21
    instruction           go to state 22
    command               go to state 23
    arguments             go to state 24
    fragments             go to state 25
    fragment              go to state 26
    array_decl            go to state 27
    number                go to state 28
    fragment_or_variable  go to state 29
    function_declaration  go to state 30


State 55

   29 pipeline: pipeline PIPE . instruction
   30 instruction: . command
   31            | . function_declaration
   38 command: . arguments
   39 arguments: . fragments
   40          | . arguments WHITESPACE fragments
   41 fragments: . fragment
   42          | . fragments fragment
   43          | . fragments keyword_as_string
   44 fragment: . fragment_or_variable
   45         | . number
   46         | . MINUS
   47         | . PHP
   48         | . SINGLE_QUOTED
   49         | . DOUBLE_QUOTED
   50         | . DOLLAR VARIABLE
   51         | . DOLLAR NUMBER
   52         | . DOLLAR QUESTION_MARK
   53         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   54         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   55         | . BEGIN_PAREN expression END_PAREN
   56         | . array_decl
   57 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   58           | . AT BEGIN_PAREN array_def END_PAREN
   59           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   64 number: . NUMBER
   74 fragment_or_variable: . FRAGMENT
   75                     | . VARIABLE
   85 function_declaration: . BEGIN_PAREN END_PAREN MAP BEGIN_BRACE statements END_BRACE

    DOLLAR         shift, and go to state 36
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 11
    FRAGMENT       shift, and go to state 12
    SINGLE_QUOTED  shift, and go to state 13
    DOUBLE_QUOTED  shift, and go to state 14
    VARIABLE       shift, and go to state 15
    PHP            shift, and go to state 16

    instruction           go to state 96
    command               go to state 23
    arguments             go to state 24
    fragments             go to state 25
    fragment              go to state 26
    array_decl            go to state 27
    number                go to state 28
    fragment_or_variable  go to state 29
    function_declaration  go to state 30


State 56

    9 statement: pipeline AMPERSAND .

    $default  reduce using rule 9 (statement)


State 57

   40 arguments: arguments WHITESPACE . fragments
   41 fragments: . fragment
   42          | . fragments fragment
   43          | . fragments keyword_as_string
   44 fragment: . fragment_or_variable
   45         | . number
   46         | . MINUS
   47         | . PHP
   48         | . SINGLE_QUOTED
   49         | . DOUBLE_QUOTED
   50         | . DOLLAR VARIABLE
   51         | . DOLLAR NUMBER
   52         | . DOLLAR QUESTION_MARK
   53         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   54         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   55         | . BEGIN_PAREN expression END_PAREN
   56         | . array_decl
   57 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   58           | . AT BEGIN_PAREN array_def END_PAREN
   59           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   64 number: . NUMBER
   74 fragment_or_variable: . FRAGMENT
   75                     | . VARIABLE

    DOLLAR         shift, and go to state 36
    BEGIN_PAREN    shift, and go to state 58
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 11
    FRAGMENT       shift, and go to state 12
    SINGLE_QUOTED  shift, and go to state 13
    DOUBLE_QUOTED  shift, and go to state 14
    VARIABLE       shift, and go to state 15
    PHP            shift, and go to state 16

    fragments             go to state 97
    fragment              go to state 26
    array_decl            go to state 27
    number                go to state 28
    fragment_or_variable  go to state 29


State 58

   44 fragment: . fragment_or_variable
   45         | . number
   46         | . MINUS
   47         | . PHP
   48         | . SINGLE_QUOTED
   49         | . DOUBLE_QUOTED
   50         | . DOLLAR VARIABLE
   51         | . DOLLAR NUMBER
   52         | . DOLLAR QUESTION_MARK
   53         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   54         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   55         | . BEGIN_PAREN expression END_PAREN
   55         | BEGIN_PAREN . expression END_PAREN
   56         | . array_decl
   57 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   58           | . AT BEGIN_PAREN array_def END_PAREN
   59           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   64 number: . NUMBER
   74 fragment_or_variable: . FRAGMENT
   75                     | . VARIABLE
   76 expression: . fragment
   77           | . expression ACCESS expression
   78           | . expression BEGIN_PAREN END_PAREN
   79           | . expression BEGIN_PAREN comma_arguments END_PAREN
   80           | . expression DIVIDE expression
   81           | . expression MULTIPLY expression
   82           | . expression ADD expression
   83           | . expression WHITESPACE MINUS expression
   84           | . function_declaration
   85 function_declaration: . BEGIN_PAREN END_PAREN MAP BEGIN_BRACE statements END_BRACE

    DOLLAR         shift, and go to state 36
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 11
    FRAGMENT       shift, and go to state 12
    SINGLE_QUOTED  shift, and go to state 13
    DOUBLE_QUOTED  shift, and go to state 14
    VARIABLE       shift, and go to state 15
    PHP            shift, and go to state 16

    fragment              go to state 38
    array_decl            go to state 27
    number                go to state 28
    fragment_or_variable  go to state 29
    expression            go to state 39
    function_declaration  go to state 40


State 59

   67 keyword_as_string: KEYWORD_WHILE .

    $default  reduce using rule 67 (keyword_as_string)


State 60

   70 keyword_as_string: KEYWORD_DO .

    $default  reduce using rule 70 (keyword_as_string)


State 61

   68 keyword_as_string: KEYWORD_FOR .

    $default  reduce using rule 68 (keyword_as_string)


State 62

   69 keyword_as_string: KEYWORD_FOREACH .

    $default  reduce using rule 69 (keyword_as_string)


State 63

   71 keyword_as_string: KEYWORD_BREAK .

    $default  reduce using rule 71 (keyword_as_string)


State 64

   72 keyword_as_string: KEYWORD_CONTINUE .

    $default  reduce using rule 72 (keyword_as_string)


State 65

   65 keyword_as_string: KEYWORD_IF .

    $default  reduce using rule 65 (keyword_as_string)


State 66

   66 keyword_as_string: KEYWORD_ELSE .

    $default  reduce using rule 66 (keyword_as_string)


State 67

   73 keyword_as_string: KEYWORD_AS .

    $default  reduce using rule 73 (keyword_as_string)


State 68

   42 fragments: fragments fragment .

    $default  reduce using rule 42 (fragments)


State 69

   43 fragments: fragments keyword_as_string .

    $default  reduce using rule 43 (fragments)


State 70

   29 pipeline: pipeline . PIPE instruction
   53 fragment: DOLLAR BEGIN_PAREN pipeline . END_PAREN

    PIPE       shift, and go to state 55
    END_PAREN  shift, and go to state 98


State 71

   37 key_name: QUESTION_MARK .

    $default  reduce using rule 37 (key_name)


State 72

   34 key_values: key_values . COMMA key_name EQUALS fragment
   35           | key_values . COMMA key_name
   54 fragment: DOLLAR BEGIN_SQUARE key_values . END_SQUARE BEGIN_PAREN pipeline END_PAREN

    END_SQUARE  shift, and go to state 99
    COMMA       shift, and go to state 100


State 73

   32 key_values: key_name .  [END_SQUARE, COMMA]
   33           | key_name . EQUALS fragment

    EQUALS  shift, and go to state 101

    $default  reduce using rule 32 (key_values)


State 74

   36 key_name: fragment_or_variable .

    $default  reduce using rule 36 (key_name)


State 75

   22 fragments_or_function_declaration: . fragments
   23                                  | . function_declaration
   24 assignment: DOLLAR VARIABLE EQUALS . fragments_or_function_declaration
   41 fragments: . fragment
   42          | . fragments fragment
   43          | . fragments keyword_as_string
   44 fragment: . fragment_or_variable
   45         | . number
   46         | . MINUS
   47         | . PHP
   48         | . SINGLE_QUOTED
   49         | . DOUBLE_QUOTED
   50         | . DOLLAR VARIABLE
   51         | . DOLLAR NUMBER
   52         | . DOLLAR QUESTION_MARK
   53         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   54         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   55         | . BEGIN_PAREN expression END_PAREN
   56         | . array_decl
   57 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   58           | . AT BEGIN_PAREN array_def END_PAREN
   59           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   64 number: . NUMBER
   74 fragment_or_variable: . FRAGMENT
   75                     | . VARIABLE
   85 function_declaration: . BEGIN_PAREN END_PAREN MAP BEGIN_BRACE statements END_BRACE

    DOLLAR         shift, and go to state 36
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 11
    FRAGMENT       shift, and go to state 12
    SINGLE_QUOTED  shift, and go to state 13
    DOUBLE_QUOTED  shift, and go to state 14
    VARIABLE       shift, and go to state 15
    PHP            shift, and go to state 16

    fragments_or_function_declaration  go to state 102
    fragments                          go to state 103
    fragment                           go to state 26
    array_decl                         go to state 27
    number                             go to state 28
    fragment_or_variable               go to state 29
    function_declaration               go to state 104


State 76

   50 fragment: DOLLAR VARIABLE .

    $default  reduce using rule 50 (fragment)


State 77

   85 function_declaration: BEGIN_PAREN END_PAREN MAP . BEGIN_BRACE statements END_BRACE

    BEGIN_BRACE  shift, and go to state 105


State 78

   83 expression: expression WHITESPACE . MINUS expression

    MINUS  shift, and go to state 106


State 79

   41 fragments: . fragment
   42          | . fragments fragment
   43          | . fragments keyword_as_string
   44 fragment: . fragment_or_variable
   45         | . number
   46         | . MINUS
   47         | . PHP
   48         | . SINGLE_QUOTED
   49         | . DOUBLE_QUOTED
   50         | . DOLLAR VARIABLE
   51         | . DOLLAR NUMBER
   52         | . DOLLAR QUESTION_MARK
   53         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   54         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   55         | . BEGIN_PAREN expression END_PAREN
   56         | . array_decl
   57 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   58           | . AT BEGIN_PAREN array_def END_PAREN
   59           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   64 number: . NUMBER
   74 fragment_or_variable: . FRAGMENT
   75                     | . VARIABLE
   78 expression: expression BEGIN_PAREN . END_PAREN
   79           | expression BEGIN_PAREN . comma_arguments END_PAREN
   86 comma_arguments: . fragments
   87                | . comma_arguments COMMA fragments

    DOLLAR         shift, and go to state 36
    BEGIN_PAREN    shift, and go to state 58
    END_PAREN      shift, and go to state 107
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 11
    FRAGMENT       shift, and go to state 12
    SINGLE_QUOTED  shift, and go to state 13
    DOUBLE_QUOTED  shift, and go to state 14
    VARIABLE       shift, and go to state 15
    PHP            shift, and go to state 16

    fragments             go to state 108
    fragment              go to state 26
    array_decl            go to state 27
    number                go to state 28
    fragment_or_variable  go to state 29
    comma_arguments       go to state 109


State 80

   55 fragment: BEGIN_PAREN expression END_PAREN .

    $default  reduce using rule 55 (fragment)


State 81

   44 fragment: . fragment_or_variable
   45         | . number
   46         | . MINUS
   47         | . PHP
   48         | . SINGLE_QUOTED
   49         | . DOUBLE_QUOTED
   50         | . DOLLAR VARIABLE
   51         | . DOLLAR NUMBER
   52         | . DOLLAR QUESTION_MARK
   53         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   54         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   55         | . BEGIN_PAREN expression END_PAREN
   56         | . array_decl
   57 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   58           | . AT BEGIN_PAREN array_def END_PAREN
   59           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   64 number: . NUMBER
   74 fragment_or_variable: . FRAGMENT
   75                     | . VARIABLE
   76 expression: . fragment
   77           | . expression ACCESS expression
   77           | expression ACCESS . expression
   78           | . expression BEGIN_PAREN END_PAREN
   79           | . expression BEGIN_PAREN comma_arguments END_PAREN
   80           | . expression DIVIDE expression
   81           | . expression MULTIPLY expression
   82           | . expression ADD expression
   83           | . expression WHITESPACE MINUS expression
   84           | . function_declaration
   85 function_declaration: . BEGIN_PAREN END_PAREN MAP BEGIN_BRACE statements END_BRACE

    DOLLAR         shift, and go to state 36
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 11
    FRAGMENT       shift, and go to state 12
    SINGLE_QUOTED  shift, and go to state 13
    DOUBLE_QUOTED  shift, and go to state 14
    VARIABLE       shift, and go to state 15
    PHP            shift, and go to state 16

    fragment              go to state 38
    array_decl            go to state 27
    number                go to state 28
    fragment_or_variable  go to state 29
    expression            go to state 110
    function_declaration  go to state 40


State 82

   44 fragment: . fragment_or_variable
   45         | . number
   46         | . MINUS
   47         | . PHP
   48         | . SINGLE_QUOTED
   49         | . DOUBLE_QUOTED
   50         | . DOLLAR VARIABLE
   51         | . DOLLAR NUMBER
   52         | . DOLLAR QUESTION_MARK
   53         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   54         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   55         | . BEGIN_PAREN expression END_PAREN
   56         | . array_decl
   57 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   58           | . AT BEGIN_PAREN array_def END_PAREN
   59           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   64 number: . NUMBER
   74 fragment_or_variable: . FRAGMENT
   75                     | . VARIABLE
   76 expression: . fragment
   77           | . expression ACCESS expression
   78           | . expression BEGIN_PAREN END_PAREN
   79           | . expression BEGIN_PAREN comma_arguments END_PAREN
   80           | . expression DIVIDE expression
   81           | . expression MULTIPLY expression
   82           | . expression ADD expression
   82           | expression ADD . expression
   83           | . expression WHITESPACE MINUS expression
   84           | . function_declaration
   85 function_declaration: . BEGIN_PAREN END_PAREN MAP BEGIN_BRACE statements END_BRACE

    DOLLAR         shift, and go to state 36
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 11
    FRAGMENT       shift, and go to state 12
    SINGLE_QUOTED  shift, and go to state 13
    DOUBLE_QUOTED  shift, and go to state 14
    VARIABLE       shift, and go to state 15
    PHP            shift, and go to state 16

    fragment              go to state 38
    array_decl            go to state 27
    number                go to state 28
    fragment_or_variable  go to state 29
    expression            go to state 111
    function_declaration  go to state 40


State 83

   44 fragment: . fragment_or_variable
   45         | . number
   46         | . MINUS
   47         | . PHP
   48         | . SINGLE_QUOTED
   49         | . DOUBLE_QUOTED
   50         | . DOLLAR VARIABLE
   51         | . DOLLAR NUMBER
   52         | . DOLLAR QUESTION_MARK
   53         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   54         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   55         | . BEGIN_PAREN expression END_PAREN
   56         | . array_decl
   57 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   58           | . AT BEGIN_PAREN array_def END_PAREN
   59           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   64 number: . NUMBER
   74 fragment_or_variable: . FRAGMENT
   75                     | . VARIABLE
   76 expression: . fragment
   77           | . expression ACCESS expression
   78           | . expression BEGIN_PAREN END_PAREN
   79           | . expression BEGIN_PAREN comma_arguments END_PAREN
   80           | . expression DIVIDE expression
   81           | . expression MULTIPLY expression
   81           | expression MULTIPLY . expression
   82           | . expression ADD expression
   83           | . expression WHITESPACE MINUS expression
   84           | . function_declaration
   85 function_declaration: . BEGIN_PAREN END_PAREN MAP BEGIN_BRACE statements END_BRACE

    DOLLAR         shift, and go to state 36
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 11
    FRAGMENT       shift, and go to state 12
    SINGLE_QUOTED  shift, and go to state 13
    DOUBLE_QUOTED  shift, and go to state 14
    VARIABLE       shift, and go to state 15
    PHP            shift, and go to state 16

    fragment              go to state 38
    array_decl            go to state 27
    number                go to state 28
    fragment_or_variable  go to state 29
    expression            go to state 112
    function_declaration  go to state 40


State 84

   44 fragment: . fragment_or_variable
   45         | . number
   46         | . MINUS
   47         | . PHP
   48         | . SINGLE_QUOTED
   49         | . DOUBLE_QUOTED
   50         | . DOLLAR VARIABLE
   51         | . DOLLAR NUMBER
   52         | . DOLLAR QUESTION_MARK
   53         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   54         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   55         | . BEGIN_PAREN expression END_PAREN
   56         | . array_decl
   57 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   58           | . AT BEGIN_PAREN array_def END_PAREN
   59           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   64 number: . NUMBER
   74 fragment_or_variable: . FRAGMENT
   75                     | . VARIABLE
   76 expression: . fragment
   77           | . expression ACCESS expression
   78           | . expression BEGIN_PAREN END_PAREN
   79           | . expression BEGIN_PAREN comma_arguments END_PAREN
   80           | . expression DIVIDE expression
   80           | expression DIVIDE . expression
   81           | . expression MULTIPLY expression
   82           | . expression ADD expression
   83           | . expression WHITESPACE MINUS expression
   84           | . function_declaration
   85 function_declaration: . BEGIN_PAREN END_PAREN MAP BEGIN_BRACE statements END_BRACE

    DOLLAR         shift, and go to state 36
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 11
    FRAGMENT       shift, and go to state 12
    SINGLE_QUOTED  shift, and go to state 13
    DOUBLE_QUOTED  shift, and go to state 14
    VARIABLE       shift, and go to state 15
    PHP            shift, and go to state 16

    fragment              go to state 38
    array_decl            go to state 27
    number                go to state 28
    fragment_or_variable  go to state 29
    expression            go to state 113
    function_declaration  go to state 40


State 85

   44 fragment: . fragment_or_variable
   45         | . number
   46         | . MINUS
   47         | . PHP
   48         | . SINGLE_QUOTED
   49         | . DOUBLE_QUOTED
   50         | . DOLLAR VARIABLE
   51         | . DOLLAR NUMBER
   52         | . DOLLAR QUESTION_MARK
   53         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   54         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   55         | . BEGIN_PAREN expression END_PAREN
   56         | . array_decl
   57 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   57           | AT BEGIN_PAREN optional_whitespace . END_PAREN
   58           | . AT BEGIN_PAREN array_def END_PAREN
   59           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   62 array_element: optional_whitespace . fragment optional_whitespace MAP optional_whitespace fragment optional_whitespace
   63              | optional_whitespace . fragment optional_whitespace
   64 number: . NUMBER
   74 fragment_or_variable: . FRAGMENT
   75                     | . VARIABLE

    DOLLAR         shift, and go to state 36
    BEGIN_PAREN    shift, and go to state 58
    END_PAREN      shift, and go to state 114
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 11
    FRAGMENT       shift, and go to state 12
    SINGLE_QUOTED  shift, and go to state 13
    DOUBLE_QUOTED  shift, and go to state 14
    VARIABLE       shift, and go to state 15
    PHP            shift, and go to state 16

    fragment              go to state 115
    array_decl            go to state 27
    number                go to state 28
    fragment_or_variable  go to state 29


State 86

   58 array_decl: AT BEGIN_PAREN array_def . END_PAREN
   59           | AT BEGIN_PAREN array_def . COMMA optional_whitespace END_PAREN
   61 array_def: array_def . COMMA array_element

    END_PAREN  shift, and go to state 116
    COMMA      shift, and go to state 117


State 87

   60 array_def: array_element .

    $default  reduce using rule 60 (array_def)


State 88

   25 assignment: COLON DOLLAR VARIABLE . EQUALS fragments_or_function_declaration
   50 fragment: DOLLAR VARIABLE .  [$end, WHITESPACE, TERMINATING_NEWLINE, BEGIN_PAREN, END_BRACE, SEMICOLON, ACCESS, ADD, MULTIPLY, DIVIDE]

    EQUALS  shift, and go to state 118

    $default  reduce using rule 50 (fragment)


State 89

   26 assignment: COLON expression ACCESS . expression EQUALS fragments_or_function_declaration
   27           | COLON expression ACCESS . BEGIN_SQUARE END_SQUARE EQUALS fragments_or_function_declaration
   44 fragment: . fragment_or_variable
   45         | . number
   46         | . MINUS
   47         | . PHP
   48         | . SINGLE_QUOTED
   49         | . DOUBLE_QUOTED
   50         | . DOLLAR VARIABLE
   51         | . DOLLAR NUMBER
   52         | . DOLLAR QUESTION_MARK
   53         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   54         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   55         | . BEGIN_PAREN expression END_PAREN
   56         | . array_decl
   57 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   58           | . AT BEGIN_PAREN array_def END_PAREN
   59           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   64 number: . NUMBER
   74 fragment_or_variable: . FRAGMENT
   75                     | . VARIABLE
   76 expression: . fragment
   77           | . expression ACCESS expression
   77           | expression ACCESS . expression
   78           | . expression BEGIN_PAREN END_PAREN
   79           | . expression BEGIN_PAREN comma_arguments END_PAREN
   80           | . expression DIVIDE expression
   81           | . expression MULTIPLY expression
   82           | . expression ADD expression
   83           | . expression WHITESPACE MINUS expression
   84           | . function_declaration
   85 function_declaration: . BEGIN_PAREN END_PAREN MAP BEGIN_BRACE statements END_BRACE

    DOLLAR         shift, and go to state 36
    BEGIN_PAREN    shift, and go to state 2
    BEGIN_SQUARE   shift, and go to state 119
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 11
    FRAGMENT       shift, and go to state 12
    SINGLE_QUOTED  shift, and go to state 13
    DOUBLE_QUOTED  shift, and go to state 14
    VARIABLE       shift, and go to state 15
    PHP            shift, and go to state 16

    fragment              go to state 38
    array_decl            go to state 27
    number                go to state 28
    fragment_or_variable  go to state 29
    expression            go to state 120
    function_declaration  go to state 40


State 90

    6 optional_whitespace: .  [BEGIN_BRACE]
    7                    | . WHITESPACE
    8                    | . TERMINATING_NEWLINE
   15 statement: KEYWORD_WHILE optional_whitespace fragment . optional_whitespace BEGIN_BRACE statements END_BRACE

    WHITESPACE           shift, and go to state 44
    TERMINATING_NEWLINE  shift, and go to state 45

    $default  reduce using rule 6 (optional_whitespace)

    optional_whitespace  go to state 121


State 91

    2 statements: . statement
    3           | . statements terminator statement
    9 statement: . pipeline AMPERSAND
   10          | . pipeline
   11          | . assignment
   12          | . COLON expression
   13          | . KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_ELSE BEGIN_BRACE statements END_BRACE
   14          | . KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   15          | . KEYWORD_WHILE optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   16          | . KEYWORD_DO optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_WHILE optional_whitespace fragment
   16          | KEYWORD_DO optional_whitespace BEGIN_BRACE . statements END_BRACE KEYWORD_WHILE optional_whitespace fragment
   17          | . KEYWORD_FOREACH optional_whitespace fragment optional_whitespace KEYWORD_AS optional_whitespace mapping BEGIN_BRACE statements END_BRACE
   18          | . KEYWORD_RETURN WHITESPACE expression
   19          | .  [TERMINATING_NEWLINE, END_BRACE, SEMICOLON]
   24 assignment: . DOLLAR VARIABLE EQUALS fragments_or_function_declaration
   25           | . COLON DOLLAR VARIABLE EQUALS fragments_or_function_declaration
   26           | . COLON expression ACCESS expression EQUALS fragments_or_function_declaration
   27           | . COLON expression ACCESS BEGIN_SQUARE END_SQUARE EQUALS fragments_or_function_declaration
   28 pipeline: . instruction
   29         | . pipeline PIPE instruction
   30 instruction: . command
   31            | . function_declaration
   38 command: . arguments
   39 arguments: . fragments
   40          | . arguments WHITESPACE fragments
   41 fragments: . fragment
   42          | . fragments fragment
   43          | . fragments keyword_as_string
   44 fragment: . fragment_or_variable
   45         | . number
   46         | . MINUS
   47         | . PHP
   48         | . SINGLE_QUOTED
   49         | . DOUBLE_QUOTED
   50         | . DOLLAR VARIABLE
   51         | . DOLLAR NUMBER
   52         | . DOLLAR QUESTION_MARK
   53         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   54         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   55         | . BEGIN_PAREN expression END_PAREN
   56         | . array_decl
   57 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   58           | . AT BEGIN_PAREN array_def END_PAREN
   59           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   64 number: . NUMBER
   74 fragment_or_variable: . FRAGMENT
   75                     | . VARIABLE
   85 function_declaration: . BEGIN_PAREN END_PAREN MAP BEGIN_BRACE statements END_BRACE

    DOLLAR           shift, and go to state 1
    BEGIN_PAREN      shift, and go to state 2
    MINUS            shift, and go to state 3
    AT               shift, and go to state 4
    COLON            shift, and go to state 5
    KEYWORD_WHILE    shift, and go to state 6
    KEYWORD_DO       shift, and go to state 7
    KEYWORD_FOREACH  shift, and go to state 8
    KEYWORD_IF       shift, and go to state 9
    KEYWORD_RETURN   shift, and go to state 10
    NUMBER           shift, and go to state 11
    FRAGMENT         shift, and go to state 12
    SINGLE_QUOTED    shift, and go to state 13
    DOUBLE_QUOTED    shift, and go to state 14
    VARIABLE         shift, and go to state 15
    PHP              shift, and go to state 16

    $default  reduce using rule 19 (statement)

    statements            go to state 122
    statement             go to state 19
    assignment            go to state 20
    pipeline              go to state 21
    instruction           go to state 22
    command               go to state 23
    arguments             go to state 24
    fragments             go to state 25
    fragment              go to state 26
    array_decl            go to state 27
    number                go to state 28
    fragment_or_variable  go to state 29
    function_declaration  go to state 30


State 92

    6 optional_whitespace: .  [KEYWORD_AS]
    7                    | . WHITESPACE
    8                    | . TERMINATING_NEWLINE
   17 statement: KEYWORD_FOREACH optional_whitespace fragment . optional_whitespace KEYWORD_AS optional_whitespace mapping BEGIN_BRACE statements END_BRACE

    WHITESPACE           shift, and go to state 44
    TERMINATING_NEWLINE  shift, and go to state 45

    $default  reduce using rule 6 (optional_whitespace)

    optional_whitespace  go to state 123


State 93

    6 optional_whitespace: .  [BEGIN_BRACE]
    7                    | . WHITESPACE
    8                    | . TERMINATING_NEWLINE
   13 statement: KEYWORD_IF optional_whitespace fragment . optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_ELSE BEGIN_BRACE statements END_BRACE
   14          | KEYWORD_IF optional_whitespace fragment . optional_whitespace BEGIN_BRACE statements END_BRACE

    WHITESPACE           shift, and go to state 44
    TERMINATING_NEWLINE  shift, and go to state 45

    $default  reduce using rule 6 (optional_whitespace)

    optional_whitespace  go to state 124


State 94

   18 statement: KEYWORD_RETURN WHITESPACE expression .  [$end, TERMINATING_NEWLINE, END_BRACE, SEMICOLON]
   77 expression: expression . ACCESS expression
   78           | expression . BEGIN_PAREN END_PAREN
   79           | expression . BEGIN_PAREN comma_arguments END_PAREN
   80           | expression . DIVIDE expression
   81           | expression . MULTIPLY expression
   82           | expression . ADD expression
   83           | expression . WHITESPACE MINUS expression

    WHITESPACE   shift, and go to state 78
    BEGIN_PAREN  shift, and go to state 79
    ACCESS       shift, and go to state 81
    ADD          shift, and go to state 82
    MULTIPLY     shift, and go to state 83
    DIVIDE       shift, and go to state 84

    $default  reduce using rule 18 (statement)


State 95

    3 statements: statements terminator statement .

    $default  reduce using rule 3 (statements)


State 96

   29 pipeline: pipeline PIPE instruction .

    $default  reduce using rule 29 (pipeline)


State 97

   40 arguments: arguments WHITESPACE fragments .  [$end, WHITESPACE, TERMINATING_NEWLINE, PIPE, END_PAREN, END_BRACE, SEMICOLON, AMPERSAND]
   42 fragments: fragments . fragment
   43          | fragments . keyword_as_string
   44 fragment: . fragment_or_variable
   45         | . number
   46         | . MINUS
   47         | . PHP
   48         | . SINGLE_QUOTED
   49         | . DOUBLE_QUOTED
   50         | . DOLLAR VARIABLE
   51         | . DOLLAR NUMBER
   52         | . DOLLAR QUESTION_MARK
   53         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   54         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   55         | . BEGIN_PAREN expression END_PAREN
   56         | . array_decl
   57 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   58           | . AT BEGIN_PAREN array_def END_PAREN
   59           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   64 number: . NUMBER
   65 keyword_as_string: . KEYWORD_IF
   66                  | . KEYWORD_ELSE
   67                  | . KEYWORD_WHILE
   68                  | . KEYWORD_FOR
   69                  | . KEYWORD_FOREACH
   70                  | . KEYWORD_DO
   71                  | . KEYWORD_BREAK
   72                  | . KEYWORD_CONTINUE
   73                  | . KEYWORD_AS
   74 fragment_or_variable: . FRAGMENT
   75                     | . VARIABLE

    DOLLAR            shift, and go to state 36
    BEGIN_PAREN       shift, and go to state 58
    MINUS             shift, and go to state 3
    AT                shift, and go to state 4
    KEYWORD_WHILE     shift, and go to state 59
    KEYWORD_DO        shift, and go to state 60
    KEYWORD_FOR       shift, and go to state 61
    KEYWORD_FOREACH   shift, and go to state 62
    KEYWORD_BREAK     shift, and go to state 63
    KEYWORD_CONTINUE  shift, and go to state 64
    KEYWORD_IF        shift, and go to state 65
    KEYWORD_ELSE      shift, and go to state 66
    KEYWORD_AS        shift, and go to state 67
    NUMBER            shift, and go to state 11
    FRAGMENT          shift, and go to state 12
    SINGLE_QUOTED     shift, and go to state 13
    DOUBLE_QUOTED     shift, and go to state 14
    VARIABLE          shift, and go to state 15
    PHP               shift, and go to state 16

    $default  reduce using rule 40 (arguments)

    fragment              go to state 68
    array_decl            go to state 27
    number                go to state 28
    keyword_as_string     go to state 69
    fragment_or_variable  go to state 29


State 98

   53 fragment: DOLLAR BEGIN_PAREN pipeline END_PAREN .

    $default  reduce using rule 53 (fragment)


State 99

   54 fragment: DOLLAR BEGIN_SQUARE key_values END_SQUARE . BEGIN_PAREN pipeline END_PAREN

    BEGIN_PAREN  shift, and go to state 125


State 100

   34 key_values: key_values COMMA . key_name EQUALS fragment
   35           | key_values COMMA . key_name
   36 key_name: . fragment_or_variable
   37         | . QUESTION_MARK
   74 fragment_or_variable: . FRAGMENT
   75                     | . VARIABLE

    FRAGMENT       shift, and go to state 12
    VARIABLE       shift, and go to state 15
    QUESTION_MARK  shift, and go to state 71

    key_name              go to state 126
    fragment_or_variable  go to state 74


State 101

   33 key_values: key_name EQUALS . fragment
   44 fragment: . fragment_or_variable
   45         | . number
   46         | . MINUS
   47         | . PHP
   48         | . SINGLE_QUOTED
   49         | . DOUBLE_QUOTED
   50         | . DOLLAR VARIABLE
   51         | . DOLLAR NUMBER
   52         | . DOLLAR QUESTION_MARK
   53         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   54         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   55         | . BEGIN_PAREN expression END_PAREN
   56         | . array_decl
   57 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   58           | . AT BEGIN_PAREN array_def END_PAREN
   59           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   64 number: . NUMBER
   74 fragment_or_variable: . FRAGMENT
   75                     | . VARIABLE

    DOLLAR         shift, and go to state 36
    BEGIN_PAREN    shift, and go to state 58
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 11
    FRAGMENT       shift, and go to state 12
    SINGLE_QUOTED  shift, and go to state 13
    DOUBLE_QUOTED  shift, and go to state 14
    VARIABLE       shift, and go to state 15
    PHP            shift, and go to state 16

    fragment              go to state 127
    array_decl            go to state 27
    number                go to state 28
    fragment_or_variable  go to state 29


State 102

   24 assignment: DOLLAR VARIABLE EQUALS fragments_or_function_declaration .

    $default  reduce using rule 24 (assignment)


State 103

   22 fragments_or_function_declaration: fragments .  [$end, TERMINATING_NEWLINE, END_BRACE, SEMICOLON]
   42 fragments: fragments . fragment
   43          | fragments . keyword_as_string
   44 fragment: . fragment_or_variable
   45         | . number
   46         | . MINUS
   47         | . PHP
   48         | . SINGLE_QUOTED
   49         | . DOUBLE_QUOTED
   50         | . DOLLAR VARIABLE
   51         | . DOLLAR NUMBER
   52         | . DOLLAR QUESTION_MARK
   53         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   54         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   55         | . BEGIN_PAREN expression END_PAREN
   56         | . array_decl
   57 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   58           | . AT BEGIN_PAREN array_def END_PAREN
   59           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   64 number: . NUMBER
   65 keyword_as_string: . KEYWORD_IF
   66                  | . KEYWORD_ELSE
   67                  | . KEYWORD_WHILE
   68                  | . KEYWORD_FOR
   69                  | . KEYWORD_FOREACH
   70                  | . KEYWORD_DO
   71                  | . KEYWORD_BREAK
   72                  | . KEYWORD_CONTINUE
   73                  | . KEYWORD_AS
   74 fragment_or_variable: . FRAGMENT
   75                     | . VARIABLE

    DOLLAR            shift, and go to state 36
    BEGIN_PAREN       shift, and go to state 58
    MINUS             shift, and go to state 3
    AT                shift, and go to state 4
    KEYWORD_WHILE     shift, and go to state 59
    KEYWORD_DO        shift, and go to state 60
    KEYWORD_FOR       shift, and go to state 61
    KEYWORD_FOREACH   shift, and go to state 62
    KEYWORD_BREAK     shift, and go to state 63
    KEYWORD_CONTINUE  shift, and go to state 64
    KEYWORD_IF        shift, and go to state 65
    KEYWORD_ELSE      shift, and go to state 66
    KEYWORD_AS        shift, and go to state 67
    NUMBER            shift, and go to state 11
    FRAGMENT          shift, and go to state 12
    SINGLE_QUOTED     shift, and go to state 13
    DOUBLE_QUOTED     shift, and go to state 14
    VARIABLE          shift, and go to state 15
    PHP               shift, and go to state 16

    $default  reduce using rule 22 (fragments_or_function_declaration)

    fragment              go to state 68
    array_decl            go to state 27
    number                go to state 28
    keyword_as_string     go to state 69
    fragment_or_variable  go to state 29


State 104

   23 fragments_or_function_declaration: function_declaration .

    $default  reduce using rule 23 (fragments_or_function_declaration)


State 105

    2 statements: . statement
    3           | . statements terminator statement
    9 statement: . pipeline AMPERSAND
   10          | . pipeline
   11          | . assignment
   12          | . COLON expression
   13          | . KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_ELSE BEGIN_BRACE statements END_BRACE
   14          | . KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   15          | . KEYWORD_WHILE optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   16          | . KEYWORD_DO optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_WHILE optional_whitespace fragment
   17          | . KEYWORD_FOREACH optional_whitespace fragment optional_whitespace KEYWORD_AS optional_whitespace mapping BEGIN_BRACE statements END_BRACE
   18          | . KEYWORD_RETURN WHITESPACE expression
   19          | .  [TERMINATING_NEWLINE, END_BRACE, SEMICOLON]
   24 assignment: . DOLLAR VARIABLE EQUALS fragments_or_function_declaration
   25           | . COLON DOLLAR VARIABLE EQUALS fragments_or_function_declaration
   26           | . COLON expression ACCESS expression EQUALS fragments_or_function_declaration
   27           | . COLON expression ACCESS BEGIN_SQUARE END_SQUARE EQUALS fragments_or_function_declaration
   28 pipeline: . instruction
   29         | . pipeline PIPE instruction
   30 instruction: . command
   31            | . function_declaration
   38 command: . arguments
   39 arguments: . fragments
   40          | . arguments WHITESPACE fragments
   41 fragments: . fragment
   42          | . fragments fragment
   43          | . fragments keyword_as_string
   44 fragment: . fragment_or_variable
   45         | . number
   46         | . MINUS
   47         | . PHP
   48         | . SINGLE_QUOTED
   49         | . DOUBLE_QUOTED
   50         | . DOLLAR VARIABLE
   51         | . DOLLAR NUMBER
   52         | . DOLLAR QUESTION_MARK
   53         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   54         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   55         | . BEGIN_PAREN expression END_PAREN
   56         | . array_decl
   57 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   58           | . AT BEGIN_PAREN array_def END_PAREN
   59           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   64 number: . NUMBER
   74 fragment_or_variable: . FRAGMENT
   75                     | . VARIABLE
   85 function_declaration: . BEGIN_PAREN END_PAREN MAP BEGIN_BRACE statements END_BRACE
   85                     | BEGIN_PAREN END_PAREN MAP BEGIN_BRACE . statements END_BRACE

    DOLLAR           shift, and go to state 1
    BEGIN_PAREN      shift, and go to state 2
    MINUS            shift, and go to state 3
    AT               shift, and go to state 4
    COLON            shift, and go to state 5
    KEYWORD_WHILE    shift, and go to state 6
    KEYWORD_DO       shift, and go to state 7
    KEYWORD_FOREACH  shift, and go to state 8
    KEYWORD_IF       shift, and go to state 9
    KEYWORD_RETURN   shift, and go to state 10
    NUMBER           shift, and go to state 11
    FRAGMENT         shift, and go to state 12
    SINGLE_QUOTED    shift, and go to state 13
    DOUBLE_QUOTED    shift, and go to state 14
    VARIABLE         shift, and go to state 15
    PHP              shift, and go to state 16

    $default  reduce using rule 19 (statement)

    statements            go to state 128
    statement             go to state 19
    assignment            go to state 20
    pipeline              go to state 21
    instruction           go to state 22
    command               go to state 23
    arguments             go to state 24
    fragments             go to state 25
    fragment              go to state 26
    array_decl            go to state 27
    number                go to state 28
    fragment_or_variable  go to state 29
    function_declaration  go to state 30


State 106

   44 fragment: . fragment_or_variable
   45         | . number
   46         | . MINUS
   47         | . PHP
   48         | . SINGLE_QUOTED
   49         | . DOUBLE_QUOTED
   50         | . DOLLAR VARIABLE
   51         | . DOLLAR NUMBER
   52         | . DOLLAR QUESTION_MARK
   53         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   54         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   55         | . BEGIN_PAREN expression END_PAREN
   56         | . array_decl
   57 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   58           | . AT BEGIN_PAREN array_def END_PAREN
   59           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   64 number: . NUMBER
   74 fragment_or_variable: . FRAGMENT
   75                     | . VARIABLE
   76 expression: . fragment
   77           | . expression ACCESS expression
   78           | . expression BEGIN_PAREN END_PAREN
   79           | . expression BEGIN_PAREN comma_arguments END_PAREN
   80           | . expression DIVIDE expression
   81           | . expression MULTIPLY expression
   82           | . expression ADD expression
   83           | . expression WHITESPACE MINUS expression
   83           | expression WHITESPACE MINUS . expression
   84           | . function_declaration
   85 function_declaration: . BEGIN_PAREN END_PAREN MAP BEGIN_BRACE statements END_BRACE

    DOLLAR         shift, and go to state 36
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 11
    FRAGMENT       shift, and go to state 12
    SINGLE_QUOTED  shift, and go to state 13
    DOUBLE_QUOTED  shift, and go to state 14
    VARIABLE       shift, and go to state 15
    PHP            shift, and go to state 16

    fragment              go to state 38
    array_decl            go to state 27
    number                go to state 28
    fragment_or_variable  go to state 29
    expression            go to state 129
    function_declaration  go to state 40


State 107

   78 expression: expression BEGIN_PAREN END_PAREN .

    $default  reduce using rule 78 (expression)


State 108

   42 fragments: fragments . fragment
   43          | fragments . keyword_as_string
   44 fragment: . fragment_or_variable
   45         | . number
   46         | . MINUS
   47         | . PHP
   48         | . SINGLE_QUOTED
   49         | . DOUBLE_QUOTED
   50         | . DOLLAR VARIABLE
   51         | . DOLLAR NUMBER
   52         | . DOLLAR QUESTION_MARK
   53         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   54         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   55         | . BEGIN_PAREN expression END_PAREN
   56         | . array_decl
   57 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   58           | . AT BEGIN_PAREN array_def END_PAREN
   59           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   64 number: . NUMBER
   65 keyword_as_string: . KEYWORD_IF
   66                  | . KEYWORD_ELSE
   67                  | . KEYWORD_WHILE
   68                  | . KEYWORD_FOR
   69                  | . KEYWORD_FOREACH
   70                  | . KEYWORD_DO
   71                  | . KEYWORD_BREAK
   72                  | . KEYWORD_CONTINUE
   73                  | . KEYWORD_AS
   74 fragment_or_variable: . FRAGMENT
   75                     | . VARIABLE
   86 comma_arguments: fragments .  [END_PAREN, COMMA]

    DOLLAR            shift, and go to state 36
    BEGIN_PAREN       shift, and go to state 58
    MINUS             shift, and go to state 3
    AT                shift, and go to state 4
    KEYWORD_WHILE     shift, and go to state 59
    KEYWORD_DO        shift, and go to state 60
    KEYWORD_FOR       shift, and go to state 61
    KEYWORD_FOREACH   shift, and go to state 62
    KEYWORD_BREAK     shift, and go to state 63
    KEYWORD_CONTINUE  shift, and go to state 64
    KEYWORD_IF        shift, and go to state 65
    KEYWORD_ELSE      shift, and go to state 66
    KEYWORD_AS        shift, and go to state 67
    NUMBER            shift, and go to state 11
    FRAGMENT          shift, and go to state 12
    SINGLE_QUOTED     shift, and go to state 13
    DOUBLE_QUOTED     shift, and go to state 14
    VARIABLE          shift, and go to state 15
    PHP               shift, and go to state 16

    $default  reduce using rule 86 (comma_arguments)

    fragment              go to state 68
    array_decl            go to state 27
    number                go to state 28
    keyword_as_string     go to state 69
    fragment_or_variable  go to state 29


State 109

   79 expression: expression BEGIN_PAREN comma_arguments . END_PAREN
   87 comma_arguments: comma_arguments . COMMA fragments

    END_PAREN  shift, and go to state 130
    COMMA      shift, and go to state 131


State 110

   77 expression: expression . ACCESS expression
   77           | expression ACCESS expression .  [$end, WHITESPACE, TERMINATING_NEWLINE, BEGIN_PAREN, END_PAREN, EQUALS, END_BRACE, SEMICOLON, ACCESS, ADD, MULTIPLY, DIVIDE]
   78           | expression . BEGIN_PAREN END_PAREN
   79           | expression . BEGIN_PAREN comma_arguments END_PAREN
   80           | expression . DIVIDE expression
   81           | expression . MULTIPLY expression
   82           | expression . ADD expression
   83           | expression . WHITESPACE MINUS expression

    $default  reduce using rule 77 (expression)

    Conflict between rule 77 and token WHITESPACE resolved as reduce (WHITESPACE < ACCESS).
    Conflict between rule 77 and token BEGIN_PAREN resolved as reduce (BEGIN_PAREN < ACCESS).
    Conflict between rule 77 and token ACCESS resolved as reduce (%left ACCESS).
    Conflict between rule 77 and token ADD resolved as reduce (ADD < ACCESS).
    Conflict between rule 77 and token MULTIPLY resolved as reduce (MULTIPLY < ACCESS).
    Conflict between rule 77 and token DIVIDE resolved as reduce (DIVIDE < ACCESS).


State 111

   77 expression: expression . ACCESS expression
   78           | expression . BEGIN_PAREN END_PAREN
   79           | expression . BEGIN_PAREN comma_arguments END_PAREN
   80           | expression . DIVIDE expression
   81           | expression . MULTIPLY expression
   82           | expression . ADD expression
   82           | expression ADD expression .  [$end, WHITESPACE, TERMINATING_NEWLINE, END_PAREN, EQUALS, END_BRACE, SEMICOLON, ADD]
   83           | expression . WHITESPACE MINUS expression

    BEGIN_PAREN  shift, and go to state 79
    ACCESS       shift, and go to state 81
    MULTIPLY     shift, and go to state 83
    DIVIDE       shift, and go to state 84

    $default  reduce using rule 82 (expression)

    Conflict between rule 82 and token WHITESPACE resolved as reduce (WHITESPACE < ADD).
    Conflict between rule 82 and token BEGIN_PAREN resolved as shift (ADD < BEGIN_PAREN).
    Conflict between rule 82 and token ACCESS resolved as shift (ADD < ACCESS).
    Conflict between rule 82 and token ADD resolved as reduce (%left ADD).
    Conflict between rule 82 and token MULTIPLY resolved as shift (ADD < MULTIPLY).
    Conflict between rule 82 and token DIVIDE resolved as shift (ADD < DIVIDE).


State 112

   77 expression: expression . ACCESS expression
   78           | expression . BEGIN_PAREN END_PAREN
   79           | expression . BEGIN_PAREN comma_arguments END_PAREN
   80           | expression . DIVIDE expression
   81           | expression . MULTIPLY expression
   81           | expression MULTIPLY expression .  [$end, WHITESPACE, TERMINATING_NEWLINE, END_PAREN, EQUALS, END_BRACE, SEMICOLON, ADD, MULTIPLY, DIVIDE]
   82           | expression . ADD expression
   83           | expression . WHITESPACE MINUS expression

    BEGIN_PAREN  shift, and go to state 79
    ACCESS       shift, and go to state 81

    $default  reduce using rule 81 (expression)

    Conflict between rule 81 and token WHITESPACE resolved as reduce (WHITESPACE < MULTIPLY).
    Conflict between rule 81 and token BEGIN_PAREN resolved as shift (MULTIPLY < BEGIN_PAREN).
    Conflict between rule 81 and token ACCESS resolved as shift (MULTIPLY < ACCESS).
    Conflict between rule 81 and token ADD resolved as reduce (ADD < MULTIPLY).
    Conflict between rule 81 and token MULTIPLY resolved as reduce (%left MULTIPLY).
    Conflict between rule 81 and token DIVIDE resolved as reduce (%left DIVIDE).


State 113

   77 expression: expression . ACCESS expression
   78           | expression . BEGIN_PAREN END_PAREN
   79           | expression . BEGIN_PAREN comma_arguments END_PAREN
   80           | expression . DIVIDE expression
   80           | expression DIVIDE expression .  [$end, WHITESPACE, TERMINATING_NEWLINE, END_PAREN, EQUALS, END_BRACE, SEMICOLON, ADD, MULTIPLY, DIVIDE]
   81           | expression . MULTIPLY expression
   82           | expression . ADD expression
   83           | expression . WHITESPACE MINUS expression

    BEGIN_PAREN  shift, and go to state 79
    ACCESS       shift, and go to state 81

    $default  reduce using rule 80 (expression)

    Conflict between rule 80 and token WHITESPACE resolved as reduce (WHITESPACE < DIVIDE).
    Conflict between rule 80 and token BEGIN_PAREN resolved as shift (DIVIDE < BEGIN_PAREN).
    Conflict between rule 80 and token ACCESS resolved as shift (DIVIDE < ACCESS).
    Conflict between rule 80 and token ADD resolved as reduce (ADD < DIVIDE).
    Conflict between rule 80 and token MULTIPLY resolved as reduce (%left MULTIPLY).
    Conflict between rule 80 and token DIVIDE resolved as reduce (%left DIVIDE).


State 114

   57 array_decl: AT BEGIN_PAREN optional_whitespace END_PAREN .

    $default  reduce using rule 57 (array_decl)


State 115

    6 optional_whitespace: .  [END_PAREN, COMMA, MAP]
    7                    | . WHITESPACE
    8                    | . TERMINATING_NEWLINE
   62 array_element: optional_whitespace fragment . optional_whitespace MAP optional_whitespace fragment optional_whitespace
   63              | optional_whitespace fragment . optional_whitespace

    WHITESPACE           shift, and go to state 44
    TERMINATING_NEWLINE  shift, and go to state 45

    $default  reduce using rule 6 (optional_whitespace)

    optional_whitespace  go to state 132


State 116

   58 array_decl: AT BEGIN_PAREN array_def END_PAREN .

    $default  reduce using rule 58 (array_decl)


State 117

    6 optional_whitespace: .  [DOLLAR, BEGIN_PAREN, END_PAREN, MINUS, AT, NUMBER, FRAGMENT, SINGLE_QUOTED, DOUBLE_QUOTED, VARIABLE, PHP]
    7                    | . WHITESPACE
    8                    | . TERMINATING_NEWLINE
   59 array_decl: AT BEGIN_PAREN array_def COMMA . optional_whitespace END_PAREN
   61 array_def: array_def COMMA . array_element
   62 array_element: . optional_whitespace fragment optional_whitespace MAP optional_whitespace fragment optional_whitespace
   63              | . optional_whitespace fragment optional_whitespace

    WHITESPACE           shift, and go to state 44
    TERMINATING_NEWLINE  shift, and go to state 45

    $default  reduce using rule 6 (optional_whitespace)

    optional_whitespace  go to state 133
    array_element        go to state 134


State 118

   22 fragments_or_function_declaration: . fragments
   23                                  | . function_declaration
   25 assignment: COLON DOLLAR VARIABLE EQUALS . fragments_or_function_declaration
   41 fragments: . fragment
   42          | . fragments fragment
   43          | . fragments keyword_as_string
   44 fragment: . fragment_or_variable
   45         | . number
   46         | . MINUS
   47         | . PHP
   48         | . SINGLE_QUOTED
   49         | . DOUBLE_QUOTED
   50         | . DOLLAR VARIABLE
   51         | . DOLLAR NUMBER
   52         | . DOLLAR QUESTION_MARK
   53         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   54         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   55         | . BEGIN_PAREN expression END_PAREN
   56         | . array_decl
   57 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   58           | . AT BEGIN_PAREN array_def END_PAREN
   59           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   64 number: . NUMBER
   74 fragment_or_variable: . FRAGMENT
   75                     | . VARIABLE
   85 function_declaration: . BEGIN_PAREN END_PAREN MAP BEGIN_BRACE statements END_BRACE

    DOLLAR         shift, and go to state 36
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 11
    FRAGMENT       shift, and go to state 12
    SINGLE_QUOTED  shift, and go to state 13
    DOUBLE_QUOTED  shift, and go to state 14
    VARIABLE       shift, and go to state 15
    PHP            shift, and go to state 16

    fragments_or_function_declaration  go to state 135
    fragments                          go to state 103
    fragment                           go to state 26
    array_decl                         go to state 27
    number                             go to state 28
    fragment_or_variable               go to state 29
    function_declaration               go to state 104


State 119

   27 assignment: COLON expression ACCESS BEGIN_SQUARE . END_SQUARE EQUALS fragments_or_function_declaration

    END_SQUARE  shift, and go to state 136


State 120

   26 assignment: COLON expression ACCESS expression . EQUALS fragments_or_function_declaration
   77 expression: expression . ACCESS expression
   77           | expression ACCESS expression .  [$end, WHITESPACE, TERMINATING_NEWLINE, BEGIN_PAREN, END_BRACE, SEMICOLON, ACCESS, ADD, MULTIPLY, DIVIDE]
   78           | expression . BEGIN_PAREN END_PAREN
   79           | expression . BEGIN_PAREN comma_arguments END_PAREN
   80           | expression . DIVIDE expression
   81           | expression . MULTIPLY expression
   82           | expression . ADD expression
   83           | expression . WHITESPACE MINUS expression

    EQUALS  shift, and go to state 137

    $default  reduce using rule 77 (expression)

    Conflict between rule 77 and token WHITESPACE resolved as reduce (WHITESPACE < ACCESS).
    Conflict between rule 77 and token BEGIN_PAREN resolved as reduce (BEGIN_PAREN < ACCESS).
    Conflict between rule 77 and token ACCESS resolved as reduce (%left ACCESS).
    Conflict between rule 77 and token ADD resolved as reduce (ADD < ACCESS).
    Conflict between rule 77 and token MULTIPLY resolved as reduce (MULTIPLY < ACCESS).
    Conflict between rule 77 and token DIVIDE resolved as reduce (DIVIDE < ACCESS).


State 121

   15 statement: KEYWORD_WHILE optional_whitespace fragment optional_whitespace . BEGIN_BRACE statements END_BRACE

    BEGIN_BRACE  shift, and go to state 138


State 122

    3 statements: statements . terminator statement
    4 terminator: . TERMINATING_NEWLINE
    5           | . SEMICOLON
   16 statement: KEYWORD_DO optional_whitespace BEGIN_BRACE statements . END_BRACE KEYWORD_WHILE optional_whitespace fragment

    TERMINATING_NEWLINE  shift, and go to state 52
    END_BRACE            shift, and go to state 139
    SEMICOLON            shift, and go to state 53

    terminator  go to state 54


State 123

   17 statement: KEYWORD_FOREACH optional_whitespace fragment optional_whitespace . KEYWORD_AS optional_whitespace mapping BEGIN_BRACE statements END_BRACE

    KEYWORD_AS  shift, and go to state 140


State 124

   13 statement: KEYWORD_IF optional_whitespace fragment optional_whitespace . BEGIN_BRACE statements END_BRACE KEYWORD_ELSE BEGIN_BRACE statements END_BRACE
   14          | KEYWORD_IF optional_whitespace fragment optional_whitespace . BEGIN_BRACE statements END_BRACE

    BEGIN_BRACE  shift, and go to state 141


State 125

   28 pipeline: . instruction
   29         | . pipeline PIPE instruction
   30 instruction: . command
   31            | . function_declaration
   38 command: . arguments
   39 arguments: . fragments
   40          | . arguments WHITESPACE fragments
   41 fragments: . fragment
   42          | . fragments fragment
   43          | . fragments keyword_as_string
   44 fragment: . fragment_or_variable
   45         | . number
   46         | . MINUS
   47         | . PHP
   48         | . SINGLE_QUOTED
   49         | . DOUBLE_QUOTED
   50         | . DOLLAR VARIABLE
   51         | . DOLLAR NUMBER
   52         | . DOLLAR QUESTION_MARK
   53         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   54         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   54         | DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN . pipeline END_PAREN
   55         | . BEGIN_PAREN expression END_PAREN
   56         | . array_decl
   57 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   58           | . AT BEGIN_PAREN array_def END_PAREN
   59           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   64 number: . NUMBER
   74 fragment_or_variable: . FRAGMENT
   75                     | . VARIABLE
   85 function_declaration: . BEGIN_PAREN END_PAREN MAP BEGIN_BRACE statements END_BRACE

    DOLLAR         shift, and go to state 36
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 11
    FRAGMENT       shift, and go to state 12
    SINGLE_QUOTED  shift, and go to state 13
    DOUBLE_QUOTED  shift, and go to state 14
    VARIABLE       shift, and go to state 15
    PHP            shift, and go to state 16

    pipeline              go to state 142
    instruction           go to state 22
    command               go to state 23
    arguments             go to state 24
    fragments             go to state 25
    fragment              go to state 26
    array_decl            go to state 27
    number                go to state 28
    fragment_or_variable  go to state 29
    function_declaration  go to state 30


State 126

   34 key_values: key_values COMMA key_name . EQUALS fragment
   35           | key_values COMMA key_name .  [END_SQUARE, COMMA]

    EQUALS  shift, and go to state 143

    $default  reduce using rule 35 (key_values)


State 127

   33 key_values: key_name EQUALS fragment .

    $default  reduce using rule 33 (key_values)


State 128

    3 statements: statements . terminator statement
    4 terminator: . TERMINATING_NEWLINE
    5           | . SEMICOLON
   85 function_declaration: BEGIN_PAREN END_PAREN MAP BEGIN_BRACE statements . END_BRACE

    TERMINATING_NEWLINE  shift, and go to state 52
    END_BRACE            shift, and go to state 144
    SEMICOLON            shift, and go to state 53

    terminator  go to state 54


State 129

   77 expression: expression . ACCESS expression
   78           | expression . BEGIN_PAREN END_PAREN
   79           | expression . BEGIN_PAREN comma_arguments END_PAREN
   80           | expression . DIVIDE expression
   81           | expression . MULTIPLY expression
   82           | expression . ADD expression
   83           | expression . WHITESPACE MINUS expression
   83           | expression WHITESPACE MINUS expression .  [$end, WHITESPACE, TERMINATING_NEWLINE, END_PAREN, EQUALS, END_BRACE, SEMICOLON, ADD]

    BEGIN_PAREN  shift, and go to state 79
    ACCESS       shift, and go to state 81
    MULTIPLY     shift, and go to state 83
    DIVIDE       shift, and go to state 84

    $default  reduce using rule 83 (expression)

    Conflict between rule 83 and token WHITESPACE resolved as reduce (WHITESPACE < MINUS).
    Conflict between rule 83 and token BEGIN_PAREN resolved as shift (MINUS < BEGIN_PAREN).
    Conflict between rule 83 and token ACCESS resolved as shift (MINUS < ACCESS).
    Conflict between rule 83 and token ADD resolved as reduce (%left ADD).
    Conflict between rule 83 and token MULTIPLY resolved as shift (MINUS < MULTIPLY).
    Conflict between rule 83 and token DIVIDE resolved as shift (MINUS < DIVIDE).


State 130

   79 expression: expression BEGIN_PAREN comma_arguments END_PAREN .

    $default  reduce using rule 79 (expression)


State 131

   41 fragments: . fragment
   42          | . fragments fragment
   43          | . fragments keyword_as_string
   44 fragment: . fragment_or_variable
   45         | . number
   46         | . MINUS
   47         | . PHP
   48         | . SINGLE_QUOTED
   49         | . DOUBLE_QUOTED
   50         | . DOLLAR VARIABLE
   51         | . DOLLAR NUMBER
   52         | . DOLLAR QUESTION_MARK
   53         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   54         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   55         | . BEGIN_PAREN expression END_PAREN
   56         | . array_decl
   57 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   58           | . AT BEGIN_PAREN array_def END_PAREN
   59           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   64 number: . NUMBER
   74 fragment_or_variable: . FRAGMENT
   75                     | . VARIABLE
   87 comma_arguments: comma_arguments COMMA . fragments

    DOLLAR         shift, and go to state 36
    BEGIN_PAREN    shift, and go to state 58
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 11
    FRAGMENT       shift, and go to state 12
    SINGLE_QUOTED  shift, and go to state 13
    DOUBLE_QUOTED  shift, and go to state 14
    VARIABLE       shift, and go to state 15
    PHP            shift, and go to state 16

    fragments             go to state 145
    fragment              go to state 26
    array_decl            go to state 27
    number                go to state 28
    fragment_or_variable  go to state 29


State 132

   62 array_element: optional_whitespace fragment optional_whitespace . MAP optional_whitespace fragment optional_whitespace
   63              | optional_whitespace fragment optional_whitespace .  [END_PAREN, COMMA]

    MAP  shift, and go to state 146

    $default  reduce using rule 63 (array_element)


State 133

   44 fragment: . fragment_or_variable
   45         | . number
   46         | . MINUS
   47         | . PHP
   48         | . SINGLE_QUOTED
   49         | . DOUBLE_QUOTED
   50         | . DOLLAR VARIABLE
   51         | . DOLLAR NUMBER
   52         | . DOLLAR QUESTION_MARK
   53         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   54         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   55         | . BEGIN_PAREN expression END_PAREN
   56         | . array_decl
   57 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   58           | . AT BEGIN_PAREN array_def END_PAREN
   59           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   59           | AT BEGIN_PAREN array_def COMMA optional_whitespace . END_PAREN
   62 array_element: optional_whitespace . fragment optional_whitespace MAP optional_whitespace fragment optional_whitespace
   63              | optional_whitespace . fragment optional_whitespace
   64 number: . NUMBER
   74 fragment_or_variable: . FRAGMENT
   75                     | . VARIABLE

    DOLLAR         shift, and go to state 36
    BEGIN_PAREN    shift, and go to state 58
    END_PAREN      shift, and go to state 147
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 11
    FRAGMENT       shift, and go to state 12
    SINGLE_QUOTED  shift, and go to state 13
    DOUBLE_QUOTED  shift, and go to state 14
    VARIABLE       shift, and go to state 15
    PHP            shift, and go to state 16

    fragment              go to state 115
    array_decl            go to state 27
    number                go to state 28
    fragment_or_variable  go to state 29


State 134

   61 array_def: array_def COMMA array_element .

    $default  reduce using rule 61 (array_def)


State 135

   25 assignment: COLON DOLLAR VARIABLE EQUALS fragments_or_function_declaration .

    $default  reduce using rule 25 (assignment)


State 136

   27 assignment: COLON expression ACCESS BEGIN_SQUARE END_SQUARE . EQUALS fragments_or_function_declaration

    EQUALS  shift, and go to state 148


State 137

   22 fragments_or_function_declaration: . fragments
   23                                  | . function_declaration
   26 assignment: COLON expression ACCESS expression EQUALS . fragments_or_function_declaration
   41 fragments: . fragment
   42          | . fragments fragment
   43          | . fragments keyword_as_string
   44 fragment: . fragment_or_variable
   45         | . number
   46         | . MINUS
   47         | . PHP
   48         | . SINGLE_QUOTED
   49         | . DOUBLE_QUOTED
   50         | . DOLLAR VARIABLE
   51         | . DOLLAR NUMBER
   52         | . DOLLAR QUESTION_MARK
   53         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   54         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   55         | . BEGIN_PAREN expression END_PAREN
   56         | . array_decl
   57 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   58           | . AT BEGIN_PAREN array_def END_PAREN
   59           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   64 number: . NUMBER
   74 fragment_or_variable: . FRAGMENT
   75                     | . VARIABLE
   85 function_declaration: . BEGIN_PAREN END_PAREN MAP BEGIN_BRACE statements END_BRACE

    DOLLAR         shift, and go to state 36
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 11
    FRAGMENT       shift, and go to state 12
    SINGLE_QUOTED  shift, and go to state 13
    DOUBLE_QUOTED  shift, and go to state 14
    VARIABLE       shift, and go to state 15
    PHP            shift, and go to state 16

    fragments_or_function_declaration  go to state 149
    fragments                          go to state 103
    fragment                           go to state 26
    array_decl                         go to state 27
    number                             go to state 28
    fragment_or_variable               go to state 29
    function_declaration               go to state 104


State 138

    2 statements: . statement
    3           | . statements terminator statement
    9 statement: . pipeline AMPERSAND
   10          | . pipeline
   11          | . assignment
   12          | . COLON expression
   13          | . KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_ELSE BEGIN_BRACE statements END_BRACE
   14          | . KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   15          | . KEYWORD_WHILE optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   15          | KEYWORD_WHILE optional_whitespace fragment optional_whitespace BEGIN_BRACE . statements END_BRACE
   16          | . KEYWORD_DO optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_WHILE optional_whitespace fragment
   17          | . KEYWORD_FOREACH optional_whitespace fragment optional_whitespace KEYWORD_AS optional_whitespace mapping BEGIN_BRACE statements END_BRACE
   18          | . KEYWORD_RETURN WHITESPACE expression
   19          | .  [TERMINATING_NEWLINE, END_BRACE, SEMICOLON]
   24 assignment: . DOLLAR VARIABLE EQUALS fragments_or_function_declaration
   25           | . COLON DOLLAR VARIABLE EQUALS fragments_or_function_declaration
   26           | . COLON expression ACCESS expression EQUALS fragments_or_function_declaration
   27           | . COLON expression ACCESS BEGIN_SQUARE END_SQUARE EQUALS fragments_or_function_declaration
   28 pipeline: . instruction
   29         | . pipeline PIPE instruction
   30 instruction: . command
   31            | . function_declaration
   38 command: . arguments
   39 arguments: . fragments
   40          | . arguments WHITESPACE fragments
   41 fragments: . fragment
   42          | . fragments fragment
   43          | . fragments keyword_as_string
   44 fragment: . fragment_or_variable
   45         | . number
   46         | . MINUS
   47         | . PHP
   48         | . SINGLE_QUOTED
   49         | . DOUBLE_QUOTED
   50         | . DOLLAR VARIABLE
   51         | . DOLLAR NUMBER
   52         | . DOLLAR QUESTION_MARK
   53         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   54         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   55         | . BEGIN_PAREN expression END_PAREN
   56         | . array_decl
   57 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   58           | . AT BEGIN_PAREN array_def END_PAREN
   59           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   64 number: . NUMBER
   74 fragment_or_variable: . FRAGMENT
   75                     | . VARIABLE
   85 function_declaration: . BEGIN_PAREN END_PAREN MAP BEGIN_BRACE statements END_BRACE

    DOLLAR           shift, and go to state 1
    BEGIN_PAREN      shift, and go to state 2
    MINUS            shift, and go to state 3
    AT               shift, and go to state 4
    COLON            shift, and go to state 5
    KEYWORD_WHILE    shift, and go to state 6
    KEYWORD_DO       shift, and go to state 7
    KEYWORD_FOREACH  shift, and go to state 8
    KEYWORD_IF       shift, and go to state 9
    KEYWORD_RETURN   shift, and go to state 10
    NUMBER           shift, and go to state 11
    FRAGMENT         shift, and go to state 12
    SINGLE_QUOTED    shift, and go to state 13
    DOUBLE_QUOTED    shift, and go to state 14
    VARIABLE         shift, and go to state 15
    PHP              shift, and go to state 16

    $default  reduce using rule 19 (statement)

    statements            go to state 150
    statement             go to state 19
    assignment            go to state 20
    pipeline              go to state 21
    instruction           go to state 22
    command               go to state 23
    arguments             go to state 24
    fragments             go to state 25
    fragment              go to state 26
    array_decl            go to state 27
    number                go to state 28
    fragment_or_variable  go to state 29
    function_declaration  go to state 30


State 139

   16 statement: KEYWORD_DO optional_whitespace BEGIN_BRACE statements END_BRACE . KEYWORD_WHILE optional_whitespace fragment

    KEYWORD_WHILE  shift, and go to state 151


State 140

    6 optional_whitespace: .  [DOLLAR]
    7                    | . WHITESPACE
    8                    | . TERMINATING_NEWLINE
   17 statement: KEYWORD_FOREACH optional_whitespace fragment optional_whitespace KEYWORD_AS . optional_whitespace mapping BEGIN_BRACE statements END_BRACE

    WHITESPACE           shift, and go to state 44
    TERMINATING_NEWLINE  shift, and go to state 45

    $default  reduce using rule 6 (optional_whitespace)

    optional_whitespace  go to state 152


State 141

    2 statements: . statement
    3           | . statements terminator statement
    9 statement: . pipeline AMPERSAND
   10          | . pipeline
   11          | . assignment
   12          | . COLON expression
   13          | . KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_ELSE BEGIN_BRACE statements END_BRACE
   13          | KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE . statements END_BRACE KEYWORD_ELSE BEGIN_BRACE statements END_BRACE
   14          | . KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   14          | KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE . statements END_BRACE
   15          | . KEYWORD_WHILE optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   16          | . KEYWORD_DO optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_WHILE optional_whitespace fragment
   17          | . KEYWORD_FOREACH optional_whitespace fragment optional_whitespace KEYWORD_AS optional_whitespace mapping BEGIN_BRACE statements END_BRACE
   18          | . KEYWORD_RETURN WHITESPACE expression
   19          | .  [TERMINATING_NEWLINE, END_BRACE, SEMICOLON]
   24 assignment: . DOLLAR VARIABLE EQUALS fragments_or_function_declaration
   25           | . COLON DOLLAR VARIABLE EQUALS fragments_or_function_declaration
   26           | . COLON expression ACCESS expression EQUALS fragments_or_function_declaration
   27           | . COLON expression ACCESS BEGIN_SQUARE END_SQUARE EQUALS fragments_or_function_declaration
   28 pipeline: . instruction
   29         | . pipeline PIPE instruction
   30 instruction: . command
   31            | . function_declaration
   38 command: . arguments
   39 arguments: . fragments
   40          | . arguments WHITESPACE fragments
   41 fragments: . fragment
   42          | . fragments fragment
   43          | . fragments keyword_as_string
   44 fragment: . fragment_or_variable
   45         | . number
   46         | . MINUS
   47         | . PHP
   48         | . SINGLE_QUOTED
   49         | . DOUBLE_QUOTED
   50         | . DOLLAR VARIABLE
   51         | . DOLLAR NUMBER
   52         | . DOLLAR QUESTION_MARK
   53         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   54         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   55         | . BEGIN_PAREN expression END_PAREN
   56         | . array_decl
   57 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   58           | . AT BEGIN_PAREN array_def END_PAREN
   59           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   64 number: . NUMBER
   74 fragment_or_variable: . FRAGMENT
   75                     | . VARIABLE
   85 function_declaration: . BEGIN_PAREN END_PAREN MAP BEGIN_BRACE statements END_BRACE

    DOLLAR           shift, and go to state 1
    BEGIN_PAREN      shift, and go to state 2
    MINUS            shift, and go to state 3
    AT               shift, and go to state 4
    COLON            shift, and go to state 5
    KEYWORD_WHILE    shift, and go to state 6
    KEYWORD_DO       shift, and go to state 7
    KEYWORD_FOREACH  shift, and go to state 8
    KEYWORD_IF       shift, and go to state 9
    KEYWORD_RETURN   shift, and go to state 10
    NUMBER           shift, and go to state 11
    FRAGMENT         shift, and go to state 12
    SINGLE_QUOTED    shift, and go to state 13
    DOUBLE_QUOTED    shift, and go to state 14
    VARIABLE         shift, and go to state 15
    PHP              shift, and go to state 16

    $default  reduce using rule 19 (statement)

    statements            go to state 153
    statement             go to state 19
    assignment            go to state 20
    pipeline              go to state 21
    instruction           go to state 22
    command               go to state 23
    arguments             go to state 24
    fragments             go to state 25
    fragment              go to state 26
    array_decl            go to state 27
    number                go to state 28
    fragment_or_variable  go to state 29
    function_declaration  go to state 30


State 142

   29 pipeline: pipeline . PIPE instruction
   54 fragment: DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline . END_PAREN

    PIPE       shift, and go to state 55
    END_PAREN  shift, and go to state 154


State 143

   34 key_values: key_values COMMA key_name EQUALS . fragment
   44 fragment: . fragment_or_variable
   45         | . number
   46         | . MINUS
   47         | . PHP
   48         | . SINGLE_QUOTED
   49         | . DOUBLE_QUOTED
   50         | . DOLLAR VARIABLE
   51         | . DOLLAR NUMBER
   52         | . DOLLAR QUESTION_MARK
   53         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   54         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   55         | . BEGIN_PAREN expression END_PAREN
   56         | . array_decl
   57 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   58           | . AT BEGIN_PAREN array_def END_PAREN
   59           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   64 number: . NUMBER
   74 fragment_or_variable: . FRAGMENT
   75                     | . VARIABLE

    DOLLAR         shift, and go to state 36
    BEGIN_PAREN    shift, and go to state 58
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 11
    FRAGMENT       shift, and go to state 12
    SINGLE_QUOTED  shift, and go to state 13
    DOUBLE_QUOTED  shift, and go to state 14
    VARIABLE       shift, and go to state 15
    PHP            shift, and go to state 16

    fragment              go to state 155
    array_decl            go to state 27
    number                go to state 28
    fragment_or_variable  go to state 29


State 144

   85 function_declaration: BEGIN_PAREN END_PAREN MAP BEGIN_BRACE statements END_BRACE .

    $default  reduce using rule 85 (function_declaration)


State 145

   42 fragments: fragments . fragment
   43          | fragments . keyword_as_string
   44 fragment: . fragment_or_variable
   45         | . number
   46         | . MINUS
   47         | . PHP
   48         | . SINGLE_QUOTED
   49         | . DOUBLE_QUOTED
   50         | . DOLLAR VARIABLE
   51         | . DOLLAR NUMBER
   52         | . DOLLAR QUESTION_MARK
   53         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   54         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   55         | . BEGIN_PAREN expression END_PAREN
   56         | . array_decl
   57 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   58           | . AT BEGIN_PAREN array_def END_PAREN
   59           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   64 number: . NUMBER
   65 keyword_as_string: . KEYWORD_IF
   66                  | . KEYWORD_ELSE
   67                  | . KEYWORD_WHILE
   68                  | . KEYWORD_FOR
   69                  | . KEYWORD_FOREACH
   70                  | . KEYWORD_DO
   71                  | . KEYWORD_BREAK
   72                  | . KEYWORD_CONTINUE
   73                  | . KEYWORD_AS
   74 fragment_or_variable: . FRAGMENT
   75                     | . VARIABLE
   87 comma_arguments: comma_arguments COMMA fragments .  [END_PAREN, COMMA]

    DOLLAR            shift, and go to state 36
    BEGIN_PAREN       shift, and go to state 58
    MINUS             shift, and go to state 3
    AT                shift, and go to state 4
    KEYWORD_WHILE     shift, and go to state 59
    KEYWORD_DO        shift, and go to state 60
    KEYWORD_FOR       shift, and go to state 61
    KEYWORD_FOREACH   shift, and go to state 62
    KEYWORD_BREAK     shift, and go to state 63
    KEYWORD_CONTINUE  shift, and go to state 64
    KEYWORD_IF        shift, and go to state 65
    KEYWORD_ELSE      shift, and go to state 66
    KEYWORD_AS        shift, and go to state 67
    NUMBER            shift, and go to state 11
    FRAGMENT          shift, and go to state 12
    SINGLE_QUOTED     shift, and go to state 13
    DOUBLE_QUOTED     shift, and go to state 14
    VARIABLE          shift, and go to state 15
    PHP               shift, and go to state 16

    $default  reduce using rule 87 (comma_arguments)

    fragment              go to state 68
    array_decl            go to state 27
    number                go to state 28
    keyword_as_string     go to state 69
    fragment_or_variable  go to state 29


State 146

    6 optional_whitespace: .  [DOLLAR, BEGIN_PAREN, MINUS, AT, NUMBER, FRAGMENT, SINGLE_QUOTED, DOUBLE_QUOTED, VARIABLE, PHP]
    7                    | . WHITESPACE
    8                    | . TERMINATING_NEWLINE
   62 array_element: optional_whitespace fragment optional_whitespace MAP . optional_whitespace fragment optional_whitespace

    WHITESPACE           shift, and go to state 44
    TERMINATING_NEWLINE  shift, and go to state 45

    $default  reduce using rule 6 (optional_whitespace)

    optional_whitespace  go to state 156


State 147

   59 array_decl: AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN .

    $default  reduce using rule 59 (array_decl)


State 148

   22 fragments_or_function_declaration: . fragments
   23                                  | . function_declaration
   27 assignment: COLON expression ACCESS BEGIN_SQUARE END_SQUARE EQUALS . fragments_or_function_declaration
   41 fragments: . fragment
   42          | . fragments fragment
   43          | . fragments keyword_as_string
   44 fragment: . fragment_or_variable
   45         | . number
   46         | . MINUS
   47         | . PHP
   48         | . SINGLE_QUOTED
   49         | . DOUBLE_QUOTED
   50         | . DOLLAR VARIABLE
   51         | . DOLLAR NUMBER
   52         | . DOLLAR QUESTION_MARK
   53         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   54         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   55         | . BEGIN_PAREN expression END_PAREN
   56         | . array_decl
   57 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   58           | . AT BEGIN_PAREN array_def END_PAREN
   59           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   64 number: . NUMBER
   74 fragment_or_variable: . FRAGMENT
   75                     | . VARIABLE
   85 function_declaration: . BEGIN_PAREN END_PAREN MAP BEGIN_BRACE statements END_BRACE

    DOLLAR         shift, and go to state 36
    BEGIN_PAREN    shift, and go to state 2
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 11
    FRAGMENT       shift, and go to state 12
    SINGLE_QUOTED  shift, and go to state 13
    DOUBLE_QUOTED  shift, and go to state 14
    VARIABLE       shift, and go to state 15
    PHP            shift, and go to state 16

    fragments_or_function_declaration  go to state 157
    fragments                          go to state 103
    fragment                           go to state 26
    array_decl                         go to state 27
    number                             go to state 28
    fragment_or_variable               go to state 29
    function_declaration               go to state 104


State 149

   26 assignment: COLON expression ACCESS expression EQUALS fragments_or_function_declaration .

    $default  reduce using rule 26 (assignment)


State 150

    3 statements: statements . terminator statement
    4 terminator: . TERMINATING_NEWLINE
    5           | . SEMICOLON
   15 statement: KEYWORD_WHILE optional_whitespace fragment optional_whitespace BEGIN_BRACE statements . END_BRACE

    TERMINATING_NEWLINE  shift, and go to state 52
    END_BRACE            shift, and go to state 158
    SEMICOLON            shift, and go to state 53

    terminator  go to state 54


State 151

    6 optional_whitespace: .  [DOLLAR, BEGIN_PAREN, MINUS, AT, NUMBER, FRAGMENT, SINGLE_QUOTED, DOUBLE_QUOTED, VARIABLE, PHP]
    7                    | . WHITESPACE
    8                    | . TERMINATING_NEWLINE
   16 statement: KEYWORD_DO optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_WHILE . optional_whitespace fragment

    WHITESPACE           shift, and go to state 44
    TERMINATING_NEWLINE  shift, and go to state 45

    $default  reduce using rule 6 (optional_whitespace)

    optional_whitespace  go to state 159


State 152

   17 statement: KEYWORD_FOREACH optional_whitespace fragment optional_whitespace KEYWORD_AS optional_whitespace . mapping BEGIN_BRACE statements END_BRACE
   20 mapping: . DOLLAR VARIABLE optional_whitespace MAP optional_whitespace DOLLAR VARIABLE optional_whitespace
   21        | . DOLLAR VARIABLE optional_whitespace

    DOLLAR  shift, and go to state 160

    mapping  go to state 161


State 153

    3 statements: statements . terminator statement
    4 terminator: . TERMINATING_NEWLINE
    5           | . SEMICOLON
   13 statement: KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements . END_BRACE KEYWORD_ELSE BEGIN_BRACE statements END_BRACE
   14          | KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements . END_BRACE

    TERMINATING_NEWLINE  shift, and go to state 52
    END_BRACE            shift, and go to state 162
    SEMICOLON            shift, and go to state 53

    terminator  go to state 54


State 154

   54 fragment: DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN .

    $default  reduce using rule 54 (fragment)


State 155

   34 key_values: key_values COMMA key_name EQUALS fragment .

    $default  reduce using rule 34 (key_values)


State 156

   44 fragment: . fragment_or_variable
   45         | . number
   46         | . MINUS
   47         | . PHP
   48         | . SINGLE_QUOTED
   49         | . DOUBLE_QUOTED
   50         | . DOLLAR VARIABLE
   51         | . DOLLAR NUMBER
   52         | . DOLLAR QUESTION_MARK
   53         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   54         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   55         | . BEGIN_PAREN expression END_PAREN
   56         | . array_decl
   57 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   58           | . AT BEGIN_PAREN array_def END_PAREN
   59           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   62 array_element: optional_whitespace fragment optional_whitespace MAP optional_whitespace . fragment optional_whitespace
   64 number: . NUMBER
   74 fragment_or_variable: . FRAGMENT
   75                     | . VARIABLE

    DOLLAR         shift, and go to state 36
    BEGIN_PAREN    shift, and go to state 58
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 11
    FRAGMENT       shift, and go to state 12
    SINGLE_QUOTED  shift, and go to state 13
    DOUBLE_QUOTED  shift, and go to state 14
    VARIABLE       shift, and go to state 15
    PHP            shift, and go to state 16

    fragment              go to state 163
    array_decl            go to state 27
    number                go to state 28
    fragment_or_variable  go to state 29


State 157

   27 assignment: COLON expression ACCESS BEGIN_SQUARE END_SQUARE EQUALS fragments_or_function_declaration .

    $default  reduce using rule 27 (assignment)


State 158

   15 statement: KEYWORD_WHILE optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE .

    $default  reduce using rule 15 (statement)


State 159

   16 statement: KEYWORD_DO optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_WHILE optional_whitespace . fragment
   44 fragment: . fragment_or_variable
   45         | . number
   46         | . MINUS
   47         | . PHP
   48         | . SINGLE_QUOTED
   49         | . DOUBLE_QUOTED
   50         | . DOLLAR VARIABLE
   51         | . DOLLAR NUMBER
   52         | . DOLLAR QUESTION_MARK
   53         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   54         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   55         | . BEGIN_PAREN expression END_PAREN
   56         | . array_decl
   57 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   58           | . AT BEGIN_PAREN array_def END_PAREN
   59           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   64 number: . NUMBER
   74 fragment_or_variable: . FRAGMENT
   75                     | . VARIABLE

    DOLLAR         shift, and go to state 36
    BEGIN_PAREN    shift, and go to state 58
    MINUS          shift, and go to state 3
    AT             shift, and go to state 4
    NUMBER         shift, and go to state 11
    FRAGMENT       shift, and go to state 12
    SINGLE_QUOTED  shift, and go to state 13
    DOUBLE_QUOTED  shift, and go to state 14
    VARIABLE       shift, and go to state 15
    PHP            shift, and go to state 16

    fragment              go to state 164
    array_decl            go to state 27
    number                go to state 28
    fragment_or_variable  go to state 29


State 160

   20 mapping: DOLLAR . VARIABLE optional_whitespace MAP optional_whitespace DOLLAR VARIABLE optional_whitespace
   21        | DOLLAR . VARIABLE optional_whitespace

    VARIABLE  shift, and go to state 165


State 161

   17 statement: KEYWORD_FOREACH optional_whitespace fragment optional_whitespace KEYWORD_AS optional_whitespace mapping . BEGIN_BRACE statements END_BRACE

    BEGIN_BRACE  shift, and go to state 166


State 162

   13 statement: KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE . KEYWORD_ELSE BEGIN_BRACE statements END_BRACE
   14          | KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE .  [$end, TERMINATING_NEWLINE, END_BRACE, SEMICOLON]

    KEYWORD_ELSE  shift, and go to state 167

    $default  reduce using rule 14 (statement)


State 163

    6 optional_whitespace: .  [END_PAREN, COMMA]
    7                    | . WHITESPACE
    8                    | . TERMINATING_NEWLINE
   62 array_element: optional_whitespace fragment optional_whitespace MAP optional_whitespace fragment . optional_whitespace

    WHITESPACE           shift, and go to state 44
    TERMINATING_NEWLINE  shift, and go to state 45

    $default  reduce using rule 6 (optional_whitespace)

    optional_whitespace  go to state 168


State 164

   16 statement: KEYWORD_DO optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_WHILE optional_whitespace fragment .

    $default  reduce using rule 16 (statement)


State 165

    6 optional_whitespace: .  [BEGIN_BRACE, MAP]
    7                    | . WHITESPACE
    8                    | . TERMINATING_NEWLINE
   20 mapping: DOLLAR VARIABLE . optional_whitespace MAP optional_whitespace DOLLAR VARIABLE optional_whitespace
   21        | DOLLAR VARIABLE . optional_whitespace

    WHITESPACE           shift, and go to state 44
    TERMINATING_NEWLINE  shift, and go to state 45

    $default  reduce using rule 6 (optional_whitespace)

    optional_whitespace  go to state 169


State 166

    2 statements: . statement
    3           | . statements terminator statement
    9 statement: . pipeline AMPERSAND
   10          | . pipeline
   11          | . assignment
   12          | . COLON expression
   13          | . KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_ELSE BEGIN_BRACE statements END_BRACE
   14          | . KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   15          | . KEYWORD_WHILE optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   16          | . KEYWORD_DO optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_WHILE optional_whitespace fragment
   17          | . KEYWORD_FOREACH optional_whitespace fragment optional_whitespace KEYWORD_AS optional_whitespace mapping BEGIN_BRACE statements END_BRACE
   17          | KEYWORD_FOREACH optional_whitespace fragment optional_whitespace KEYWORD_AS optional_whitespace mapping BEGIN_BRACE . statements END_BRACE
   18          | . KEYWORD_RETURN WHITESPACE expression
   19          | .  [TERMINATING_NEWLINE, END_BRACE, SEMICOLON]
   24 assignment: . DOLLAR VARIABLE EQUALS fragments_or_function_declaration
   25           | . COLON DOLLAR VARIABLE EQUALS fragments_or_function_declaration
   26           | . COLON expression ACCESS expression EQUALS fragments_or_function_declaration
   27           | . COLON expression ACCESS BEGIN_SQUARE END_SQUARE EQUALS fragments_or_function_declaration
   28 pipeline: . instruction
   29         | . pipeline PIPE instruction
   30 instruction: . command
   31            | . function_declaration
   38 command: . arguments
   39 arguments: . fragments
   40          | . arguments WHITESPACE fragments
   41 fragments: . fragment
   42          | . fragments fragment
   43          | . fragments keyword_as_string
   44 fragment: . fragment_or_variable
   45         | . number
   46         | . MINUS
   47         | . PHP
   48         | . SINGLE_QUOTED
   49         | . DOUBLE_QUOTED
   50         | . DOLLAR VARIABLE
   51         | . DOLLAR NUMBER
   52         | . DOLLAR QUESTION_MARK
   53         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   54         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   55         | . BEGIN_PAREN expression END_PAREN
   56         | . array_decl
   57 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   58           | . AT BEGIN_PAREN array_def END_PAREN
   59           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   64 number: . NUMBER
   74 fragment_or_variable: . FRAGMENT
   75                     | . VARIABLE
   85 function_declaration: . BEGIN_PAREN END_PAREN MAP BEGIN_BRACE statements END_BRACE

    DOLLAR           shift, and go to state 1
    BEGIN_PAREN      shift, and go to state 2
    MINUS            shift, and go to state 3
    AT               shift, and go to state 4
    COLON            shift, and go to state 5
    KEYWORD_WHILE    shift, and go to state 6
    KEYWORD_DO       shift, and go to state 7
    KEYWORD_FOREACH  shift, and go to state 8
    KEYWORD_IF       shift, and go to state 9
    KEYWORD_RETURN   shift, and go to state 10
    NUMBER           shift, and go to state 11
    FRAGMENT         shift, and go to state 12
    SINGLE_QUOTED    shift, and go to state 13
    DOUBLE_QUOTED    shift, and go to state 14
    VARIABLE         shift, and go to state 15
    PHP              shift, and go to state 16

    $default  reduce using rule 19 (statement)

    statements            go to state 170
    statement             go to state 19
    assignment            go to state 20
    pipeline              go to state 21
    instruction           go to state 22
    command               go to state 23
    arguments             go to state 24
    fragments             go to state 25
    fragment              go to state 26
    array_decl            go to state 27
    number                go to state 28
    fragment_or_variable  go to state 29
    function_declaration  go to state 30


State 167

   13 statement: KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_ELSE . BEGIN_BRACE statements END_BRACE

    BEGIN_BRACE  shift, and go to state 171


State 168

   62 array_element: optional_whitespace fragment optional_whitespace MAP optional_whitespace fragment optional_whitespace .

    $default  reduce using rule 62 (array_element)


State 169

   20 mapping: DOLLAR VARIABLE optional_whitespace . MAP optional_whitespace DOLLAR VARIABLE optional_whitespace
   21        | DOLLAR VARIABLE optional_whitespace .  [BEGIN_BRACE]

    MAP  shift, and go to state 172

    $default  reduce using rule 21 (mapping)


State 170

    3 statements: statements . terminator statement
    4 terminator: . TERMINATING_NEWLINE
    5           | . SEMICOLON
   17 statement: KEYWORD_FOREACH optional_whitespace fragment optional_whitespace KEYWORD_AS optional_whitespace mapping BEGIN_BRACE statements . END_BRACE

    TERMINATING_NEWLINE  shift, and go to state 52
    END_BRACE            shift, and go to state 173
    SEMICOLON            shift, and go to state 53

    terminator  go to state 54


State 171

    2 statements: . statement
    3           | . statements terminator statement
    9 statement: . pipeline AMPERSAND
   10          | . pipeline
   11          | . assignment
   12          | . COLON expression
   13          | . KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_ELSE BEGIN_BRACE statements END_BRACE
   13          | KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_ELSE BEGIN_BRACE . statements END_BRACE
   14          | . KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   15          | . KEYWORD_WHILE optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE
   16          | . KEYWORD_DO optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_WHILE optional_whitespace fragment
   17          | . KEYWORD_FOREACH optional_whitespace fragment optional_whitespace KEYWORD_AS optional_whitespace mapping BEGIN_BRACE statements END_BRACE
   18          | . KEYWORD_RETURN WHITESPACE expression
   19          | .  [TERMINATING_NEWLINE, END_BRACE, SEMICOLON]
   24 assignment: . DOLLAR VARIABLE EQUALS fragments_or_function_declaration
   25           | . COLON DOLLAR VARIABLE EQUALS fragments_or_function_declaration
   26           | . COLON expression ACCESS expression EQUALS fragments_or_function_declaration
   27           | . COLON expression ACCESS BEGIN_SQUARE END_SQUARE EQUALS fragments_or_function_declaration
   28 pipeline: . instruction
   29         | . pipeline PIPE instruction
   30 instruction: . command
   31            | . function_declaration
   38 command: . arguments
   39 arguments: . fragments
   40          | . arguments WHITESPACE fragments
   41 fragments: . fragment
   42          | . fragments fragment
   43          | . fragments keyword_as_string
   44 fragment: . fragment_or_variable
   45         | . number
   46         | . MINUS
   47         | . PHP
   48         | . SINGLE_QUOTED
   49         | . DOUBLE_QUOTED
   50         | . DOLLAR VARIABLE
   51         | . DOLLAR NUMBER
   52         | . DOLLAR QUESTION_MARK
   53         | . DOLLAR BEGIN_PAREN pipeline END_PAREN
   54         | . DOLLAR BEGIN_SQUARE key_values END_SQUARE BEGIN_PAREN pipeline END_PAREN
   55         | . BEGIN_PAREN expression END_PAREN
   56         | . array_decl
   57 array_decl: . AT BEGIN_PAREN optional_whitespace END_PAREN
   58           | . AT BEGIN_PAREN array_def END_PAREN
   59           | . AT BEGIN_PAREN array_def COMMA optional_whitespace END_PAREN
   64 number: . NUMBER
   74 fragment_or_variable: . FRAGMENT
   75                     | . VARIABLE
   85 function_declaration: . BEGIN_PAREN END_PAREN MAP BEGIN_BRACE statements END_BRACE

    DOLLAR           shift, and go to state 1
    BEGIN_PAREN      shift, and go to state 2
    MINUS            shift, and go to state 3
    AT               shift, and go to state 4
    COLON            shift, and go to state 5
    KEYWORD_WHILE    shift, and go to state 6
    KEYWORD_DO       shift, and go to state 7
    KEYWORD_FOREACH  shift, and go to state 8
    KEYWORD_IF       shift, and go to state 9
    KEYWORD_RETURN   shift, and go to state 10
    NUMBER           shift, and go to state 11
    FRAGMENT         shift, and go to state 12
    SINGLE_QUOTED    shift, and go to state 13
    DOUBLE_QUOTED    shift, and go to state 14
    VARIABLE         shift, and go to state 15
    PHP              shift, and go to state 16

    $default  reduce using rule 19 (statement)

    statements            go to state 174
    statement             go to state 19
    assignment            go to state 20
    pipeline              go to state 21
    instruction           go to state 22
    command               go to state 23
    arguments             go to state 24
    fragments             go to state 25
    fragment              go to state 26
    array_decl            go to state 27
    number                go to state 28
    fragment_or_variable  go to state 29
    function_declaration  go to state 30


State 172

    6 optional_whitespace: .  [DOLLAR]
    7                    | . WHITESPACE
    8                    | . TERMINATING_NEWLINE
   20 mapping: DOLLAR VARIABLE optional_whitespace MAP . optional_whitespace DOLLAR VARIABLE optional_whitespace

    WHITESPACE           shift, and go to state 44
    TERMINATING_NEWLINE  shift, and go to state 45

    $default  reduce using rule 6 (optional_whitespace)

    optional_whitespace  go to state 175


State 173

   17 statement: KEYWORD_FOREACH optional_whitespace fragment optional_whitespace KEYWORD_AS optional_whitespace mapping BEGIN_BRACE statements END_BRACE .

    $default  reduce using rule 17 (statement)


State 174

    3 statements: statements . terminator statement
    4 terminator: . TERMINATING_NEWLINE
    5           | . SEMICOLON
   13 statement: KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_ELSE BEGIN_BRACE statements . END_BRACE

    TERMINATING_NEWLINE  shift, and go to state 52
    END_BRACE            shift, and go to state 176
    SEMICOLON            shift, and go to state 53

    terminator  go to state 54


State 175

   20 mapping: DOLLAR VARIABLE optional_whitespace MAP optional_whitespace . DOLLAR VARIABLE optional_whitespace

    DOLLAR  shift, and go to state 177


State 176

   13 statement: KEYWORD_IF optional_whitespace fragment optional_whitespace BEGIN_BRACE statements END_BRACE KEYWORD_ELSE BEGIN_BRACE statements END_BRACE .

    $default  reduce using rule 13 (statement)


State 177

   20 mapping: DOLLAR VARIABLE optional_whitespace MAP optional_whitespace DOLLAR . VARIABLE optional_whitespace

    VARIABLE  shift, and go to state 178


State 178

    6 optional_whitespace: .  [BEGIN_BRACE]
    7                    | . WHITESPACE
    8                    | . TERMINATING_NEWLINE
   20 mapping: DOLLAR VARIABLE optional_whitespace MAP optional_whitespace DOLLAR VARIABLE . optional_whitespace

    WHITESPACE           shift, and go to state 44
    TERMINATING_NEWLINE  shift, and go to state 45

    $default  reduce using rule 6 (optional_whitespace)

    optional_whitespace  go to state 179


State 179

   20 mapping: DOLLAR VARIABLE optional_whitespace MAP optional_whitespace DOLLAR VARIABLE optional_whitespace .

    $default  reduce using rule 20 (mapping)
